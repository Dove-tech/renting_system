[{"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/index.js":"1","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/reportWebVitals.js":"2","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Favorite.js":"3","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Signup.js":"4","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Search.js":"5","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Signin.js":"6","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Resetpassword.js":"7","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Main.js":"8"},{"size":1185,"mtime":1636587952383,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1636512412664,"results":"11","hashOfConfig":"10"},{"size":4573,"mtime":1637700036333,"results":"12","hashOfConfig":"10"},{"size":3771,"mtime":1636550140303,"results":"13","hashOfConfig":"10"},{"size":7912,"mtime":1637788586228,"results":"14","hashOfConfig":"10"},{"size":2684,"mtime":1637700022604,"results":"15","hashOfConfig":"10"},{"size":2632,"mtime":1636550132637,"results":"16","hashOfConfig":"10"},{"size":427,"mtime":1636586511273,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"1btteql",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"21"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"21"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"21"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"21"},"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/index.js",["41","42","43"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { hashHistory as history } from 'react-router';\nimport { BrowserRouter as Router, Routes, Switch, Route, Link } from 'react-router-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Favorite from './Favorite';\nimport Signup from './Signup';\nimport Signin from './Signin';\nimport Resetpassword from './Resetpassword';\nimport Search from './Search';\nimport Main from './Main';\n\n\nReactDOM.render(\n  <Router>\n      <Routes>\n      <Route exact path='/' component={<Main />}></Route>\n      <Route exact path='/search' element={<Search />} />\n      <Route exact path='/signup' element={<Signup />} />\n      <Route exact path='/signin' element={<Signin />} />\n      <Route exact path='/resetpassword' element={<Resetpassword />} />\n      <Route exact path='/favorite' element={<Favorite />} />\n      </Routes>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["44","45"],"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/reportWebVitals.js",[],"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Favorite.js",["46","47","48","49","50","51","52"],"import { Form, Input, Checkbox, Button, Modal, message, List, Card, Descriptions } from 'antd';\nimport React, { Component, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\nclass Favorite extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: 3,\n            favoriteList: null,\n            deleteInfo: {\n                user: '',\n                room: ''\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ user: window.localStorage.getItem(\"user\")  }, () => {\n            console.log(\"state\", this.state.user);\n        });\n        this.getFavorite();\n    }\n\n    // onFinish = (values) => {\n    //     console.log(\"values\", values);\n    //     const deleteInfo = { user: values.user, room: values.room };\n    //     axios.post('/pillow/favorite/deleteFavorite/', deleteInfo).then((res) => {\n    //         console.log(\"res\", res);\n    //         if (res.data.response.error === 'OK') {\n    //             message.info(\"You've deleted successfully!\");\n    //         } else {\n    //             message.error(\"This is an error message\");\n    //         }\n    //     });\n    // }\n\n    getFavorite = () => {\n        const request = {user: this.state.user};\n        axios.post('/pillow/favorite/query_all_favorite/', request).then(res => {\n            console.log(res);\n            if (res?.data?.response?.results) {\n                this.setState({favoriteList: res?.data?.response?.results})\n            }\n        }).catch(e => console.log(e));\n    };\n\n    deleteFav = (room_id) => {\n        const deleteInfo = { user: this.state.user, room: room_id };\n        axios.post('/pillow/favorite/deleteFavorite/', deleteInfo).then((res) => {\n            console.log(\"res\", res);\n            if (res.data.response.error === 'OK') {\n                message.info(\"You've deleted successfully!\");\n                this.getFavorite();\n            } else {\n                message.error(\"This is an error message\");\n            }\n        });\n    }\n\n    getFavorite = () => {\n        const request = {user: this.state.user};\n        axios.post('/pillow/favorite/query_all_favorite/', request).then(res => {\n            console.log(res);\n            if (res?.data?.response?.results) {\n                this.setState({favoriteList: res?.data?.response?.results})\n            }\n        }).catch(e => console.log(e));\n    };\n\n    favoriteList = () => (\n        <List \n            grid={{ gutter: 16, column: 4 }}\n            dataSource={this.state.favoriteList}\n            renderItem={item => (\n            <List.Item>\n                <Card title=\"Room ID\">{item}</Card>\n                <Button onClick={() => {\n                    this.deleteFav(item)\n                }}>Delete</Button>\n            </List.Item>\n            )}  \n        />\n    );\n\n    render() {\n        return <div>\n                {/* <Form\n                    name=\"basic\"\n                    labelCol={{ span: 8 }}\n                    wrapperCol={{ span: 16 }}\n                    initialValues={{ remember: true }}\n                    onFinish={this.onFinish}\n                    autoComplete=\"off\"\n                >\n                    <Form.Item\n                        label=\"User_id\"\n                        name=\"user\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input the user id for the record',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Room_id\"\n                        name=\"room\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input the room id for the record!',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        wrapperCol={{\n                            offset: 8,\n                            span: 16,\n                        }}\n                    >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Delete\n                        </Button>\n                    </Form.Item>\n                </Form> */}\n                {this.state.favoriteList && this.favoriteList()} \n        </div>;\n    }\n}\n\nexport default Favorite;","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Signup.js",["53","54","55"],"import { Form, Input, Checkbox, Button, Modal, message } from 'antd';\nimport React, { useState, Component } from 'react';\nimport axios from 'axios';\n\nclass Signup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            signupInfo: {\n                name: '',\n                password: ''\n            }\n        }\n    }\n\n    onFinish = (values) => {\n        console.log(\"values\", values);\n        const signInfo = { name: values.username, password: values.password };\n        // this.setState({signupInfo: {name: values.username, password: values.password}}, () => {\n        console.log(signInfo);\n        axios.post('/pillow/user-signup/', signInfo).then((res) => {\n            console.log(\"res\", res);\n            if (res.data.response.error === 'OK') {\n                message.info(\"You've signed up successfully!\");\n            } else {\n                message.error(\"This is an error message\");\n            }\n        });\n        // });\n    }\n\n    render() {\n        return (\n            <>\n                <Form\n                    name=\"basic\"\n                    labelCol={{ span: 8 }}\n                    wrapperCol={{ span: 16 }}\n                    initialValues={{ remember: true }}\n                    onFinish={this.onFinish}\n                    // onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Form.Item\n                        label=\"Username\"\n                        name=\"username\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your username!',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Password\"\n                        name=\"password\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your password!',\n                            },\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"confirm\"\n                        label=\"Confirm Password\"\n                        dependencies={['password']}\n                        hasFeedback\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please confirm your password!',\n                            },\n                            ({ getFieldValue }) => ({\n                                validator(_, value) {\n                                    if (!value || getFieldValue('password') === value) {\n                                        return Promise.resolve();\n                                    }\n                                    return Promise.reject(new Error('The two passwords that you entered do not match!'));\n                                },\n                            }),\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item\n                        wrapperCol={{\n                            offset: 8,\n                            span: 16,\n                        }}\n                    >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Sign up\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </>\n        )\n    }\n}\n\nexport default Signup;","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Search.js",["56","57"],"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Signin.js",["58","59","60","61"],"import { Form, Input, Checkbox, Button, Modal, message } from 'antd';\nimport React, { useState, Component } from 'react';\nimport axios from 'axios';\n\nclass Signin extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    onFinish = (values) => {\n        console.log(\"values\", values);\n        const signinInfo = { name: values.username, password: values.password };\n        // this.setState({signupInfo: {name: values.username, password: values.password}}, () => {\n        console.log(signinInfo);\n        axios.post('/pillow/user-signin/', signinInfo).then((res) => {\n            console.log(\"res\", res);\n            if (res.data.response.error === 'OK') {\n                message.info(\"You've signed in successfully!\");\n                window.localStorage.setItem(\"user\",res.data.response.id)\n            } else {\n                message.error(\"Password is not correct\");\n            }\n        });\n        // });\n    }\n\n    render() {\n        return (\n            <>\n                <Form\n                    name=\"basic\"\n                    labelCol={{ span: 8 }}\n                    wrapperCol={{ span: 16 }}\n                    initialValues={{ remember: true }}\n                    onFinish={this.onFinish}\n                    // onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Form.Item\n                        label=\"Username\"\n                        name=\"username\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your username!',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Password\"\n                        name=\"password\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your password!',\n                            },\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item\n                        wrapperCol={{\n                            offset: 8,\n                            span: 16,\n                        }}\n                    >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Sign in\n                        </Button>\n                    </Form.Item>\n                </Form>\n\n            </>\n        )\n    }\n}\n\nexport default Signin;","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Resetpassword.js",["62","63","64","65"],"import { Form, Input, Checkbox, Button, Modal, message } from 'antd';\nimport React, { useState, Component } from 'react';\nimport axios from 'axios';\n\nclass Resetpassword extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    onFinish = (values) => {\n        console.log(\"values\", values);\n        const resetPasswordInfo = { name: values.username, password: values.password };\n        // this.setState({signupInfo: {name: values.username, password: values.password}}, () => {\n        console.log(resetPasswordInfo);\n        axios.post('/pillow/reset-password/', resetPasswordInfo).then((res) => {\n            console.log(\"res\", res);\n            if (res.data.response.error === 'OK') {\n                message.info(\"You've reset your password successfully!\");\n            } else {\n                message.error(\"Wrong message\");\n            }\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <Form\n                    name=\"basic\"\n                    labelCol={{ span: 8 }}\n                    wrapperCol={{ span: 16 }}\n                    initialValues={{ remember: true }}\n                    onFinish={this.onFinish}\n                    // onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Form.Item\n                        label=\"Username\"\n                        name=\"username\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your username!',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Password\"\n                        name=\"password\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your password!',\n                            },\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item\n                        wrapperCol={{\n                            offset: 8,\n                            span: 16,\n                        }}\n                    >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Reset\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </>\n        )\n    }\n}\n\nexport default Resetpassword;","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Main.js",["66","67","68","69","70","71","72","73"],"import { Form, Input, Checkbox, Button, Modal, message } from 'antd';\nimport React, { useState, Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = () => {\n    }\n\n    render() {\n        return <div>\n            <Button onClick={this.handleClick}>Sign up</Button>\n        </div>;\n    }\n}\n\nexport default Main;",{"ruleId":"74","severity":1,"message":"75","line":3,"column":25,"nodeType":"76","messageId":"77","endLine":3,"endColumn":32},{"ruleId":"74","severity":1,"message":"78","line":4,"column":43,"nodeType":"76","messageId":"77","endLine":4,"endColumn":49},{"ruleId":"74","severity":1,"message":"79","line":4,"column":58,"nodeType":"76","messageId":"77","endLine":4,"endColumn":62},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"74","severity":1,"message":"84","line":1,"column":10,"nodeType":"76","messageId":"77","endLine":1,"endColumn":14},{"ruleId":"74","severity":1,"message":"85","line":1,"column":16,"nodeType":"76","messageId":"77","endLine":1,"endColumn":21},{"ruleId":"74","severity":1,"message":"86","line":1,"column":23,"nodeType":"76","messageId":"77","endLine":1,"endColumn":31},{"ruleId":"74","severity":1,"message":"87","line":1,"column":41,"nodeType":"76","messageId":"77","endLine":1,"endColumn":46},{"ruleId":"74","severity":1,"message":"88","line":1,"column":69,"nodeType":"76","messageId":"77","endLine":1,"endColumn":81},{"ruleId":"74","severity":1,"message":"89","line":2,"column":28,"nodeType":"76","messageId":"77","endLine":2,"endColumn":36},{"ruleId":"74","severity":1,"message":"90","line":2,"column":38,"nodeType":"76","messageId":"77","endLine":2,"endColumn":47},{"ruleId":"74","severity":1,"message":"86","line":1,"column":23,"nodeType":"76","messageId":"77","endLine":1,"endColumn":31},{"ruleId":"74","severity":1,"message":"87","line":1,"column":41,"nodeType":"76","messageId":"77","endLine":1,"endColumn":46},{"ruleId":"74","severity":1,"message":"89","line":2,"column":17,"nodeType":"76","messageId":"77","endLine":2,"endColumn":25},{"ruleId":"74","severity":1,"message":"91","line":3,"column":28,"nodeType":"76","messageId":"77","endLine":3,"endColumn":35},{"ruleId":"74","severity":1,"message":"92","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":14},{"ruleId":"74","severity":1,"message":"86","line":1,"column":23,"nodeType":"76","messageId":"77","endLine":1,"endColumn":31},{"ruleId":"74","severity":1,"message":"87","line":1,"column":41,"nodeType":"76","messageId":"77","endLine":1,"endColumn":46},{"ruleId":"74","severity":1,"message":"89","line":2,"column":17,"nodeType":"76","messageId":"77","endLine":2,"endColumn":25},{"ruleId":"93","severity":1,"message":"94","line":6,"column":5,"nodeType":"95","messageId":"96","endLine":8,"endColumn":6},{"ruleId":"74","severity":1,"message":"86","line":1,"column":23,"nodeType":"76","messageId":"77","endLine":1,"endColumn":31},{"ruleId":"74","severity":1,"message":"87","line":1,"column":41,"nodeType":"76","messageId":"77","endLine":1,"endColumn":46},{"ruleId":"74","severity":1,"message":"89","line":2,"column":17,"nodeType":"76","messageId":"77","endLine":2,"endColumn":25},{"ruleId":"93","severity":1,"message":"94","line":6,"column":5,"nodeType":"95","messageId":"96","endLine":8,"endColumn":6},{"ruleId":"74","severity":1,"message":"84","line":1,"column":10,"nodeType":"76","messageId":"77","endLine":1,"endColumn":14},{"ruleId":"74","severity":1,"message":"85","line":1,"column":16,"nodeType":"76","messageId":"77","endLine":1,"endColumn":21},{"ruleId":"74","severity":1,"message":"86","line":1,"column":23,"nodeType":"76","messageId":"77","endLine":1,"endColumn":31},{"ruleId":"74","severity":1,"message":"87","line":1,"column":41,"nodeType":"76","messageId":"77","endLine":1,"endColumn":46},{"ruleId":"74","severity":1,"message":"97","line":1,"column":48,"nodeType":"76","messageId":"77","endLine":1,"endColumn":55},{"ruleId":"74","severity":1,"message":"89","line":2,"column":17,"nodeType":"76","messageId":"77","endLine":2,"endColumn":25},{"ruleId":"74","severity":1,"message":"79","line":3,"column":10,"nodeType":"76","messageId":"77","endLine":3,"endColumn":14},{"ruleId":"93","severity":1,"message":"94","line":6,"column":5,"nodeType":"95","messageId":"96","endLine":8,"endColumn":6},"no-unused-vars","'history' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["98"],"no-negated-in-lhs",["99"],"'Form' is defined but never used.","'Input' is defined but never used.","'Checkbox' is defined but never used.","'Modal' is defined but never used.","'Descriptions' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Divider' is defined but never used.","'moment' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'message' is defined but never used.","no-global-assign","no-unsafe-negation"]