[{"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/index.js":"1","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/reportWebVitals.js":"2","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Favorite.js":"3","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Signup.js":"4","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Search.js":"5","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Signin.js":"6","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Resetpassword.js":"7","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Main.js":"8"},{"size":1183,"mtime":1637879286457,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1636512412664,"results":"11","hashOfConfig":"10"},{"size":4573,"mtime":1637700036333,"results":"12","hashOfConfig":"10"},{"size":3771,"mtime":1636550140303,"results":"13","hashOfConfig":"10"},{"size":8409,"mtime":1637879917600,"results":"14","hashOfConfig":"10"},{"size":2684,"mtime":1637700022604,"results":"15","hashOfConfig":"10"},{"size":2632,"mtime":1636550132637,"results":"16","hashOfConfig":"10"},{"size":1129,"mtime":1637879286455,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1btteql",{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/index.js",["39","40","41"],"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/reportWebVitals.js",[],["42","43"],"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Favorite.js",["44","45","46","47","48","49","50"],"import { Form, Input, Checkbox, Button, Modal, message, List, Card, Descriptions } from 'antd';\nimport React, { Component, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\nclass Favorite extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: 3,\n            favoriteList: null,\n            deleteInfo: {\n                user: '',\n                room: ''\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ user: window.localStorage.getItem(\"user\")  }, () => {\n            console.log(\"state\", this.state.user);\n        });\n        this.getFavorite();\n    }\n\n    // onFinish = (values) => {\n    //     console.log(\"values\", values);\n    //     const deleteInfo = { user: values.user, room: values.room };\n    //     axios.post('/pillow/favorite/deleteFavorite/', deleteInfo).then((res) => {\n    //         console.log(\"res\", res);\n    //         if (res.data.response.error === 'OK') {\n    //             message.info(\"You've deleted successfully!\");\n    //         } else {\n    //             message.error(\"This is an error message\");\n    //         }\n    //     });\n    // }\n\n    getFavorite = () => {\n        const request = {user: this.state.user};\n        axios.post('/pillow/favorite/query_all_favorite/', request).then(res => {\n            console.log(res);\n            if (res?.data?.response?.results) {\n                this.setState({favoriteList: res?.data?.response?.results})\n            }\n        }).catch(e => console.log(e));\n    };\n\n    deleteFav = (room_id) => {\n        const deleteInfo = { user: this.state.user, room: room_id };\n        axios.post('/pillow/favorite/deleteFavorite/', deleteInfo).then((res) => {\n            console.log(\"res\", res);\n            if (res.data.response.error === 'OK') {\n                message.info(\"You've deleted successfully!\");\n                this.getFavorite();\n            } else {\n                message.error(\"This is an error message\");\n            }\n        });\n    }\n\n    getFavorite = () => {\n        const request = {user: this.state.user};\n        axios.post('/pillow/favorite/query_all_favorite/', request).then(res => {\n            console.log(res);\n            if (res?.data?.response?.results) {\n                this.setState({favoriteList: res?.data?.response?.results})\n            }\n        }).catch(e => console.log(e));\n    };\n\n    favoriteList = () => (\n        <List \n            grid={{ gutter: 16, column: 4 }}\n            dataSource={this.state.favoriteList}\n            renderItem={item => (\n            <List.Item>\n                <Card title=\"Room ID\">{item}</Card>\n                <Button onClick={() => {\n                    this.deleteFav(item)\n                }}>Delete</Button>\n            </List.Item>\n            )}  \n        />\n    );\n\n    render() {\n        return <div>\n                {/* <Form\n                    name=\"basic\"\n                    labelCol={{ span: 8 }}\n                    wrapperCol={{ span: 16 }}\n                    initialValues={{ remember: true }}\n                    onFinish={this.onFinish}\n                    autoComplete=\"off\"\n                >\n                    <Form.Item\n                        label=\"User_id\"\n                        name=\"user\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input the user id for the record',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Room_id\"\n                        name=\"room\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input the room id for the record!',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        wrapperCol={{\n                            offset: 8,\n                            span: 16,\n                        }}\n                    >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Delete\n                        </Button>\n                    </Form.Item>\n                </Form> */}\n                {this.state.favoriteList && this.favoriteList()} \n        </div>;\n    }\n}\n\nexport default Favorite;","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Signup.js",["51","52","53"],"import { Form, Input, Checkbox, Button, Modal, message } from 'antd';\nimport React, { useState, Component } from 'react';\nimport axios from 'axios';\n\nclass Signup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            signupInfo: {\n                name: '',\n                password: ''\n            }\n        }\n    }\n\n    onFinish = (values) => {\n        console.log(\"values\", values);\n        const signInfo = { name: values.username, password: values.password };\n        // this.setState({signupInfo: {name: values.username, password: values.password}}, () => {\n        console.log(signInfo);\n        axios.post('/pillow/user-signup/', signInfo).then((res) => {\n            console.log(\"res\", res);\n            if (res.data.response.error === 'OK') {\n                message.info(\"You've signed up successfully!\");\n            } else {\n                message.error(\"This is an error message\");\n            }\n        });\n        // });\n    }\n\n    render() {\n        return (\n            <>\n                <Form\n                    name=\"basic\"\n                    labelCol={{ span: 8 }}\n                    wrapperCol={{ span: 16 }}\n                    initialValues={{ remember: true }}\n                    onFinish={this.onFinish}\n                    // onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Form.Item\n                        label=\"Username\"\n                        name=\"username\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your username!',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Password\"\n                        name=\"password\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your password!',\n                            },\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"confirm\"\n                        label=\"Confirm Password\"\n                        dependencies={['password']}\n                        hasFeedback\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please confirm your password!',\n                            },\n                            ({ getFieldValue }) => ({\n                                validator(_, value) {\n                                    if (!value || getFieldValue('password') === value) {\n                                        return Promise.resolve();\n                                    }\n                                    return Promise.reject(new Error('The two passwords that you entered do not match!'));\n                                },\n                            }),\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item\n                        wrapperCol={{\n                            offset: 8,\n                            span: 16,\n                        }}\n                    >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Sign up\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </>\n        )\n    }\n}\n\nexport default Signup;","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Search.js",["54","55"],"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Signin.js",["56","57","58","59"],"import { Form, Input, Checkbox, Button, Modal, message } from 'antd';\nimport React, { useState, Component } from 'react';\nimport axios from 'axios';\n\nclass Signin extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    onFinish = (values) => {\n        console.log(\"values\", values);\n        const signinInfo = { name: values.username, password: values.password };\n        // this.setState({signupInfo: {name: values.username, password: values.password}}, () => {\n        console.log(signinInfo);\n        axios.post('/pillow/user-signin/', signinInfo).then((res) => {\n            console.log(\"res\", res);\n            if (res.data.response.error === 'OK') {\n                message.info(\"You've signed in successfully!\");\n                window.localStorage.setItem(\"user\",res.data.response.id)\n            } else {\n                message.error(\"Password is not correct\");\n            }\n        });\n        // });\n    }\n\n    render() {\n        return (\n            <>\n                <Form\n                    name=\"basic\"\n                    labelCol={{ span: 8 }}\n                    wrapperCol={{ span: 16 }}\n                    initialValues={{ remember: true }}\n                    onFinish={this.onFinish}\n                    // onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Form.Item\n                        label=\"Username\"\n                        name=\"username\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your username!',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Password\"\n                        name=\"password\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your password!',\n                            },\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item\n                        wrapperCol={{\n                            offset: 8,\n                            span: 16,\n                        }}\n                    >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Sign in\n                        </Button>\n                    </Form.Item>\n                </Form>\n\n            </>\n        )\n    }\n}\n\nexport default Signin;","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Resetpassword.js",["60","61","62","63"],"import { Form, Input, Checkbox, Button, Modal, message } from 'antd';\nimport React, { useState, Component } from 'react';\nimport axios from 'axios';\n\nclass Resetpassword extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    onFinish = (values) => {\n        console.log(\"values\", values);\n        const resetPasswordInfo = { name: values.username, password: values.password };\n        // this.setState({signupInfo: {name: values.username, password: values.password}}, () => {\n        console.log(resetPasswordInfo);\n        axios.post('/pillow/reset-password/', resetPasswordInfo).then((res) => {\n            console.log(\"res\", res);\n            if (res.data.response.error === 'OK') {\n                message.info(\"You've reset your password successfully!\");\n            } else {\n                message.error(\"Wrong message\");\n            }\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <Form\n                    name=\"basic\"\n                    labelCol={{ span: 8 }}\n                    wrapperCol={{ span: 16 }}\n                    initialValues={{ remember: true }}\n                    onFinish={this.onFinish}\n                    // onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Form.Item\n                        label=\"Username\"\n                        name=\"username\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your username!',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Password\"\n                        name=\"password\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your password!',\n                            },\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item\n                        wrapperCol={{\n                            offset: 8,\n                            span: 16,\n                        }}\n                    >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Reset\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </>\n        )\n    }\n}\n\nexport default Resetpassword;","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Main.js",["64","65","66","67","68","69","70","71","72","73"],{"ruleId":"74","severity":1,"message":"75","line":3,"column":25,"nodeType":"76","messageId":"77","endLine":3,"endColumn":32},{"ruleId":"74","severity":1,"message":"78","line":4,"column":43,"nodeType":"76","messageId":"77","endLine":4,"endColumn":49},{"ruleId":"74","severity":1,"message":"79","line":4,"column":58,"nodeType":"76","messageId":"77","endLine":4,"endColumn":62},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"74","severity":1,"message":"84","line":1,"column":10,"nodeType":"76","messageId":"77","endLine":1,"endColumn":14},{"ruleId":"74","severity":1,"message":"85","line":1,"column":16,"nodeType":"76","messageId":"77","endLine":1,"endColumn":21},{"ruleId":"74","severity":1,"message":"86","line":1,"column":23,"nodeType":"76","messageId":"77","endLine":1,"endColumn":31},{"ruleId":"74","severity":1,"message":"87","line":1,"column":41,"nodeType":"76","messageId":"77","endLine":1,"endColumn":46},{"ruleId":"74","severity":1,"message":"88","line":1,"column":69,"nodeType":"76","messageId":"77","endLine":1,"endColumn":81},{"ruleId":"74","severity":1,"message":"89","line":2,"column":28,"nodeType":"76","messageId":"77","endLine":2,"endColumn":36},{"ruleId":"74","severity":1,"message":"90","line":2,"column":38,"nodeType":"76","messageId":"77","endLine":2,"endColumn":47},{"ruleId":"74","severity":1,"message":"86","line":1,"column":23,"nodeType":"76","messageId":"77","endLine":1,"endColumn":31},{"ruleId":"74","severity":1,"message":"87","line":1,"column":41,"nodeType":"76","messageId":"77","endLine":1,"endColumn":46},{"ruleId":"74","severity":1,"message":"89","line":2,"column":17,"nodeType":"76","messageId":"77","endLine":2,"endColumn":25},{"ruleId":"74","severity":1,"message":"91","line":3,"column":28,"nodeType":"76","messageId":"77","endLine":3,"endColumn":35},{"ruleId":"74","severity":1,"message":"92","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":14},{"ruleId":"74","severity":1,"message":"86","line":1,"column":23,"nodeType":"76","messageId":"77","endLine":1,"endColumn":31},{"ruleId":"74","severity":1,"message":"87","line":1,"column":41,"nodeType":"76","messageId":"77","endLine":1,"endColumn":46},{"ruleId":"74","severity":1,"message":"89","line":2,"column":17,"nodeType":"76","messageId":"77","endLine":2,"endColumn":25},{"ruleId":"93","severity":1,"message":"94","line":6,"column":5,"nodeType":"95","messageId":"96","endLine":8,"endColumn":6},{"ruleId":"74","severity":1,"message":"86","line":1,"column":23,"nodeType":"76","messageId":"77","endLine":1,"endColumn":31},{"ruleId":"74","severity":1,"message":"87","line":1,"column":41,"nodeType":"76","messageId":"77","endLine":1,"endColumn":46},{"ruleId":"74","severity":1,"message":"89","line":2,"column":17,"nodeType":"76","messageId":"77","endLine":2,"endColumn":25},{"ruleId":"93","severity":1,"message":"94","line":6,"column":5,"nodeType":"95","messageId":"96","endLine":8,"endColumn":6},{"ruleId":"74","severity":1,"message":"84","line":1,"column":24,"nodeType":"76","messageId":"77","endLine":1,"endColumn":28},{"ruleId":"74","severity":1,"message":"85","line":1,"column":30,"nodeType":"76","messageId":"77","endLine":1,"endColumn":35},{"ruleId":"74","severity":1,"message":"86","line":1,"column":37,"nodeType":"76","messageId":"77","endLine":1,"endColumn":45},{"ruleId":"74","severity":1,"message":"97","line":1,"column":47,"nodeType":"76","messageId":"77","endLine":1,"endColumn":53},{"ruleId":"74","severity":1,"message":"87","line":1,"column":55,"nodeType":"76","messageId":"77","endLine":1,"endColumn":60},{"ruleId":"74","severity":1,"message":"98","line":1,"column":62,"nodeType":"76","messageId":"77","endLine":1,"endColumn":69},{"ruleId":"74","severity":1,"message":"89","line":2,"column":17,"nodeType":"76","messageId":"77","endLine":2,"endColumn":25},{"ruleId":"74","severity":1,"message":"79","line":3,"column":10,"nodeType":"76","messageId":"77","endLine":3,"endColumn":14},{"ruleId":"74","severity":1,"message":"99","line":8,"column":9,"nodeType":"76","messageId":"77","endLine":8,"endColumn":16},{"ruleId":"93","severity":1,"message":"94","line":11,"column":5,"nodeType":"95","messageId":"96","endLine":13,"endColumn":6},"no-unused-vars","'history' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["100"],"no-negated-in-lhs",["101"],"'Form' is defined but never used.","'Input' is defined but never used.","'Checkbox' is defined but never used.","'Modal' is defined but never used.","'Descriptions' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Divider' is defined but never used.","'moment' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Button' is defined but never used.","'message' is defined but never used.","'SubMenu' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]