[{"E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\index.js":"1","E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\Favorite.js":"2","E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\reportWebVitals.js":"3","E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\Signup.js":"4","E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\Signin.js":"5","E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\Main.js":"6","E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\Resetpassword.js":"7","E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\Search.js":"8","E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\Compare.js":"9"},{"size":1310,"mtime":1638055686745,"results":"10","hashOfConfig":"11"},{"size":4709,"mtime":1637786382904,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1636520899540,"results":"13","hashOfConfig":"11"},{"size":3876,"mtime":1636586576655,"results":"14","hashOfConfig":"11"},{"size":2763,"mtime":1637698567289,"results":"15","hashOfConfig":"11"},{"size":1163,"mtime":1637880347940,"results":"16","hashOfConfig":"11"},{"size":2708,"mtime":1636586576652,"results":"17","hashOfConfig":"11"},{"size":8611,"mtime":1638057177827,"results":"18","hashOfConfig":"11"},{"size":4821,"mtime":1638057209777,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1kyorc4",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"23"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"23"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\index.js",["45","46","47"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { hashHistory as history } from 'react-router';\r\nimport { BrowserRouter as Router, Routes, Switch, Route, Link } from 'react-router-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Favorite from './Favorite';\r\nimport Signup from './Signup';\r\nimport Signin from './Signin';\r\nimport Resetpassword from './Resetpassword';\r\nimport Search from './Search';\r\nimport Main from './Main';\r\nimport Compare from './Compare';\r\n\r\n\r\nReactDOM.render(\r\n  <Router>\r\n      <Routes>\r\n      <Route exact path='/' element={<Main />}></Route>\r\n      <Route exact path='/search' element={<Search />} />\r\n      <Route exact path='/signup' element={<Signup />} />\r\n      <Route exact path='/signin' element={<Signin />} />\r\n      <Route exact path='/resetpassword' element={<Resetpassword />} />\r\n      <Route exact path='/favorite' element={<Favorite />} />\r\n      <Route exact path='/compare' element={<Compare />} />\r\n      </Routes>\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["48","49"],"E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\Favorite.js",["50","51","52","53","54","55","56"],"import { Form, Input, Checkbox, Button, Modal, message, List, Card, Descriptions } from 'antd';\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Favorite extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: 3,\r\n            favoriteList: null,\r\n            deleteInfo: {\r\n                user: '',\r\n                room: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ user: window.localStorage.getItem(\"user\")  }, () => {\r\n            console.log(\"state\", this.state.user);\r\n        });\r\n        this.getFavorite();\r\n    }\r\n\r\n    // onFinish = (values) => {\r\n    //     console.log(\"values\", values);\r\n    //     const deleteInfo = { user: values.user, room: values.room };\r\n    //     axios.post('/pillow/favorite/deleteFavorite/', deleteInfo).then((res) => {\r\n    //         console.log(\"res\", res);\r\n    //         if (res.data.response.error === 'OK') {\r\n    //             message.info(\"You've deleted successfully!\");\r\n    //         } else {\r\n    //             message.error(\"This is an error message\");\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    getFavorite = () => {\r\n        const request = {user: this.state.user};\r\n        axios.post('/pillow/favorite/query_all_favorite/', request).then(res => {\r\n            console.log(res);\r\n            if (res?.data?.response?.results) {\r\n                this.setState({favoriteList: res?.data?.response?.results})\r\n            }\r\n        }).catch(e => console.log(e));\r\n    };\r\n\r\n    deleteFav = (room_id) => {\r\n        const deleteInfo = { user: this.state.user, room: room_id };\r\n        axios.post('/pillow/favorite/deleteFavorite/', deleteInfo).then((res) => {\r\n            console.log(\"res\", res);\r\n            if (res.data.response.error === 'OK') {\r\n                message.info(\"You've deleted successfully!\");\r\n                this.getFavorite();\r\n            } else {\r\n                message.error(\"This is an error message\");\r\n            }\r\n        });\r\n    }\r\n\r\n    getFavorite = () => {\r\n        const request = {user: this.state.user};\r\n        axios.post('/pillow/favorite/query_all_favorite/', request).then(res => {\r\n            console.log(res);\r\n            if (res?.data?.response?.results) {\r\n                this.setState({favoriteList: res?.data?.response?.results})\r\n            }\r\n        }).catch(e => console.log(e));\r\n    };\r\n\r\n    favoriteList = () => (\r\n        <List \r\n            grid={{ gutter: 16, column: 4 }}\r\n            dataSource={this.state.favoriteList}\r\n            renderItem={item => (\r\n            <List.Item>\r\n                <Card title=\"Room ID\">{item}</Card>\r\n                <Button onClick={() => {\r\n                    this.deleteFav(item)\r\n                }}>Delete</Button>\r\n            </List.Item>\r\n            )}  \r\n        />\r\n    );\r\n\r\n    render() {\r\n        return <div>\r\n                {/* <Form\r\n                    name=\"basic\"\r\n                    labelCol={{ span: 8 }}\r\n                    wrapperCol={{ span: 16 }}\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={this.onFinish}\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <Form.Item\r\n                        label=\"User_id\"\r\n                        name=\"user\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input the user id for the record',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Room_id\"\r\n                        name=\"room\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input the room id for the record!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        wrapperCol={{\r\n                            offset: 8,\r\n                            span: 16,\r\n                        }}\r\n                    >\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Delete\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form> */}\r\n                {this.state.favoriteList && this.favoriteList()} \r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default Favorite;","E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\reportWebVitals.js",[],"E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\Signup.js",["57","58","59"],"import { Form, Input, Checkbox, Button, Modal, message } from 'antd';\r\nimport React, { useState, Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Signup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signupInfo: {\r\n                name: '',\r\n                password: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    onFinish = (values) => {\r\n        console.log(\"values\", values);\r\n        const signInfo = { name: values.username, password: values.password };\r\n        // this.setState({signupInfo: {name: values.username, password: values.password}}, () => {\r\n        console.log(signInfo);\r\n        axios.post('/pillow/user-signup/', signInfo).then((res) => {\r\n            console.log(\"res\", res);\r\n            if (res.data.response.error === 'OK') {\r\n                message.info(\"You've signed up successfully!\");\r\n            } else {\r\n                message.error(\"This is an error message\");\r\n            }\r\n        });\r\n        // });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Form\r\n                    name=\"basic\"\r\n                    labelCol={{ span: 8 }}\r\n                    wrapperCol={{ span: 16 }}\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={this.onFinish}\r\n                    // onFinishFailed={onFinishFailed}\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <Form.Item\r\n                        label=\"Username\"\r\n                        name=\"username\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your username!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Password\"\r\n                        name=\"password\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your password!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"confirm\"\r\n                        label=\"Confirm Password\"\r\n                        dependencies={['password']}\r\n                        hasFeedback\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please confirm your password!',\r\n                            },\r\n                            ({ getFieldValue }) => ({\r\n                                validator(_, value) {\r\n                                    if (!value || getFieldValue('password') === value) {\r\n                                        return Promise.resolve();\r\n                                    }\r\n                                    return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                                },\r\n                            }),\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        wrapperCol={{\r\n                            offset: 8,\r\n                            span: 16,\r\n                        }}\r\n                    >\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Sign up\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup;","E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\Signin.js",["60","61","62","63"],"import { Form, Input, Checkbox, Button, Modal, message } from 'antd';\r\nimport React, { useState, Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Signin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    onFinish = (values) => {\r\n        console.log(\"values\", values);\r\n        const signinInfo = { name: values.username, password: values.password };\r\n        // this.setState({signupInfo: {name: values.username, password: values.password}}, () => {\r\n        console.log(signinInfo);\r\n        axios.post('/pillow/user-signin/', signinInfo).then((res) => {\r\n            console.log(\"res\", res);\r\n            if (res.data.response.error === 'OK') {\r\n                message.info(\"You've signed in successfully!\");\r\n                window.localStorage.setItem(\"user\",res.data.response.id)\r\n            } else {\r\n                message.error(\"Password is not correct\");\r\n            }\r\n        });\r\n        // });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Form\r\n                    name=\"basic\"\r\n                    labelCol={{ span: 8 }}\r\n                    wrapperCol={{ span: 16 }}\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={this.onFinish}\r\n                    // onFinishFailed={onFinishFailed}\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <Form.Item\r\n                        label=\"Username\"\r\n                        name=\"username\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your username!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Password\"\r\n                        name=\"password\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your password!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        wrapperCol={{\r\n                            offset: 8,\r\n                            span: 16,\r\n                        }}\r\n                    >\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Sign in\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signin;","E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\Main.js",["64","65","66","67","68","69","70","71","72","73"],"import { Layout, Menu, Form, Input, Checkbox, Button, Modal, message } from 'antd';\r\nimport React, { useState, Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './css/main.css';\r\nimport { BulbTwoTone, HeartTwoTone, SmileTwoTone } from '@ant-design/icons';\r\n\r\nconst { Header, Content } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return <Layout>\r\n            <Header>\r\n                <div className=\"logo\" />\r\n                <Menu className=\"nav-menu\" mode=\"horizontal\">\r\n                    <Menu.Item key=\"compare\" icon={<BulbTwoTone twoToneColor=\"#52c41a\" />}>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"favorite\" icon={<HeartTwoTone twoToneColor=\"#eb2f96\" />}>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"user\" icon={<SmileTwoTone />}>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Header>\r\n            <Content>\r\n                <div className=\"content\"></div>\r\n            </Content>\r\n        </Layout>\r\n    }\r\n}\r\n\r\nexport default Main;","E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\Resetpassword.js",["74","75","76","77"],"import { Form, Input, Checkbox, Button, Modal, message } from 'antd';\r\nimport React, { useState, Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Resetpassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    onFinish = (values) => {\r\n        console.log(\"values\", values);\r\n        const resetPasswordInfo = { name: values.username, password: values.password };\r\n        // this.setState({signupInfo: {name: values.username, password: values.password}}, () => {\r\n        console.log(resetPasswordInfo);\r\n        axios.post('/pillow/reset-password/', resetPasswordInfo).then((res) => {\r\n            console.log(\"res\", res);\r\n            if (res.data.response.error === 'OK') {\r\n                message.info(\"You've reset your password successfully!\");\r\n            } else {\r\n                message.error(\"Wrong message\");\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Form\r\n                    name=\"basic\"\r\n                    labelCol={{ span: 8 }}\r\n                    wrapperCol={{ span: 16 }}\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={this.onFinish}\r\n                    // onFinishFailed={onFinishFailed}\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <Form.Item\r\n                        label=\"Username\"\r\n                        name=\"username\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your username!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Password\"\r\n                        name=\"password\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your password!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        wrapperCol={{\r\n                            offset: 8,\r\n                            span: 16,\r\n                        }}\r\n                    >\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Reset\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resetpassword;","E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\Search.js",["78","79"],"E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\Compare.js",["80","81","82","83","84","85","86","87","88","89","90","91"],{"ruleId":"92","severity":1,"message":"93","line":3,"column":25,"nodeType":"94","messageId":"95","endLine":3,"endColumn":32},{"ruleId":"92","severity":1,"message":"96","line":4,"column":43,"nodeType":"94","messageId":"95","endLine":4,"endColumn":49},{"ruleId":"92","severity":1,"message":"97","line":4,"column":58,"nodeType":"94","messageId":"95","endLine":4,"endColumn":62},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"92","severity":1,"message":"102","line":1,"column":10,"nodeType":"94","messageId":"95","endLine":1,"endColumn":14},{"ruleId":"92","severity":1,"message":"103","line":1,"column":16,"nodeType":"94","messageId":"95","endLine":1,"endColumn":21},{"ruleId":"92","severity":1,"message":"104","line":1,"column":23,"nodeType":"94","messageId":"95","endLine":1,"endColumn":31},{"ruleId":"92","severity":1,"message":"105","line":1,"column":41,"nodeType":"94","messageId":"95","endLine":1,"endColumn":46},{"ruleId":"92","severity":1,"message":"106","line":1,"column":69,"nodeType":"94","messageId":"95","endLine":1,"endColumn":81},{"ruleId":"92","severity":1,"message":"107","line":2,"column":28,"nodeType":"94","messageId":"95","endLine":2,"endColumn":36},{"ruleId":"92","severity":1,"message":"108","line":2,"column":38,"nodeType":"94","messageId":"95","endLine":2,"endColumn":47},{"ruleId":"92","severity":1,"message":"104","line":1,"column":23,"nodeType":"94","messageId":"95","endLine":1,"endColumn":31},{"ruleId":"92","severity":1,"message":"105","line":1,"column":41,"nodeType":"94","messageId":"95","endLine":1,"endColumn":46},{"ruleId":"92","severity":1,"message":"107","line":2,"column":17,"nodeType":"94","messageId":"95","endLine":2,"endColumn":25},{"ruleId":"92","severity":1,"message":"104","line":1,"column":23,"nodeType":"94","messageId":"95","endLine":1,"endColumn":31},{"ruleId":"92","severity":1,"message":"105","line":1,"column":41,"nodeType":"94","messageId":"95","endLine":1,"endColumn":46},{"ruleId":"92","severity":1,"message":"107","line":2,"column":17,"nodeType":"94","messageId":"95","endLine":2,"endColumn":25},{"ruleId":"109","severity":1,"message":"110","line":6,"column":5,"nodeType":"111","messageId":"112","endLine":8,"endColumn":6},{"ruleId":"92","severity":1,"message":"102","line":1,"column":24,"nodeType":"94","messageId":"95","endLine":1,"endColumn":28},{"ruleId":"92","severity":1,"message":"103","line":1,"column":30,"nodeType":"94","messageId":"95","endLine":1,"endColumn":35},{"ruleId":"92","severity":1,"message":"104","line":1,"column":37,"nodeType":"94","messageId":"95","endLine":1,"endColumn":45},{"ruleId":"92","severity":1,"message":"113","line":1,"column":47,"nodeType":"94","messageId":"95","endLine":1,"endColumn":53},{"ruleId":"92","severity":1,"message":"105","line":1,"column":55,"nodeType":"94","messageId":"95","endLine":1,"endColumn":60},{"ruleId":"92","severity":1,"message":"114","line":1,"column":62,"nodeType":"94","messageId":"95","endLine":1,"endColumn":69},{"ruleId":"92","severity":1,"message":"107","line":2,"column":17,"nodeType":"94","messageId":"95","endLine":2,"endColumn":25},{"ruleId":"92","severity":1,"message":"97","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":14},{"ruleId":"92","severity":1,"message":"115","line":8,"column":9,"nodeType":"94","messageId":"95","endLine":8,"endColumn":16},{"ruleId":"109","severity":1,"message":"110","line":11,"column":5,"nodeType":"111","messageId":"112","endLine":13,"endColumn":6},{"ruleId":"92","severity":1,"message":"104","line":1,"column":23,"nodeType":"94","messageId":"95","endLine":1,"endColumn":31},{"ruleId":"92","severity":1,"message":"105","line":1,"column":41,"nodeType":"94","messageId":"95","endLine":1,"endColumn":46},{"ruleId":"92","severity":1,"message":"107","line":2,"column":17,"nodeType":"94","messageId":"95","endLine":2,"endColumn":25},{"ruleId":"109","severity":1,"message":"110","line":6,"column":5,"nodeType":"111","messageId":"112","endLine":8,"endColumn":6},{"ruleId":"92","severity":1,"message":"116","line":3,"column":28,"nodeType":"94","messageId":"95","endLine":3,"endColumn":35},{"ruleId":"92","severity":1,"message":"117","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":14},{"ruleId":"92","severity":1,"message":"113","line":3,"column":20,"nodeType":"94","messageId":"95","endLine":3,"endColumn":26},{"ruleId":"92","severity":1,"message":"116","line":3,"column":28,"nodeType":"94","messageId":"95","endLine":3,"endColumn":35},{"ruleId":"92","severity":1,"message":"118","line":3,"column":37,"nodeType":"94","messageId":"95","endLine":3,"endColumn":47},{"ruleId":"92","severity":1,"message":"103","line":3,"column":49,"nodeType":"94","messageId":"95","endLine":3,"endColumn":54},{"ruleId":"92","severity":1,"message":"119","line":3,"column":56,"nodeType":"94","messageId":"95","endLine":3,"endColumn":67},{"ruleId":"92","severity":1,"message":"120","line":3,"column":69,"nodeType":"94","messageId":"95","endLine":3,"endColumn":72},{"ruleId":"92","severity":1,"message":"121","line":3,"column":74,"nodeType":"94","messageId":"95","endLine":3,"endColumn":77},{"ruleId":"92","severity":1,"message":"102","line":3,"column":79,"nodeType":"94","messageId":"95","endLine":3,"endColumn":83},{"ruleId":"92","severity":1,"message":"117","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":14},{"ruleId":"92","severity":1,"message":"122","line":6,"column":7,"nodeType":"94","messageId":"95","endLine":6,"endColumn":20},{"ruleId":"109","severity":1,"message":"110","line":10,"column":5,"nodeType":"111","messageId":"112","endLine":12,"endColumn":6},{"ruleId":"123","severity":1,"message":"124","line":120,"column":38,"nodeType":"125","messageId":"126","endLine":121,"endColumn":15},"no-unused-vars","'history' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["127"],"no-negated-in-lhs",["128"],"'Form' is defined but never used.","'Input' is defined but never used.","'Checkbox' is defined but never used.","'Modal' is defined but never used.","'Descriptions' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Button' is defined but never used.","'message' is defined but never used.","'SubMenu' is assigned a value but never used.","'Divider' is defined but never used.","'moment' is defined but never used.","'DatePicker' is defined but never used.","'InputNumber' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'CheckboxGroup' is assigned a value but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","putCommentInBraces","no-global-assign","no-unsafe-negation"]