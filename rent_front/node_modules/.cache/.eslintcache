[{"E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\index.js":"1","E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\reportWebVitals.js":"2","E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\Favorite.js":"3","E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\Signup.js":"4","E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\Signin.js":"5","E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\Search.js":"6","E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\Resetpassword.js":"7","E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\Compare.js":"8","E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\Main.js":"9"},{"size":1310,"mtime":1638055686745,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1636520899540,"results":"12","hashOfConfig":"11"},{"size":4709,"mtime":1637786382904,"results":"13","hashOfConfig":"11"},{"size":3876,"mtime":1636586576655,"results":"14","hashOfConfig":"11"},{"size":2763,"mtime":1637698567289,"results":"15","hashOfConfig":"11"},{"size":8611,"mtime":1638057177827,"results":"16","hashOfConfig":"11"},{"size":2708,"mtime":1636586576652,"results":"17","hashOfConfig":"11"},{"size":4802,"mtime":1638147352078,"results":"18","hashOfConfig":"11"},{"size":1293,"mtime":1638140218640,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"1kyorc4",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\index.js",["46","47","48"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { hashHistory as history } from 'react-router';\r\nimport { BrowserRouter as Router, Routes, Switch, Route, Link } from 'react-router-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Favorite from './Favorite';\r\nimport Signup from './Signup';\r\nimport Signin from './Signin';\r\nimport Resetpassword from './Resetpassword';\r\nimport Search from './Search';\r\nimport Main from './Main';\r\nimport Compare from './Compare';\r\n\r\n\r\nReactDOM.render(\r\n  <Router>\r\n      <Routes>\r\n      <Route exact path='/' element={<Main />}></Route>\r\n      <Route exact path='/search' element={<Search />} />\r\n      <Route exact path='/signup' element={<Signup />} />\r\n      <Route exact path='/signin' element={<Signin />} />\r\n      <Route exact path='/resetpassword' element={<Resetpassword />} />\r\n      <Route exact path='/favorite' element={<Favorite />} />\r\n      <Route exact path='/compare' element={<Compare />} />\r\n      </Routes>\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\reportWebVitals.js",[],"E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\Favorite.js",["49","50","51","52","53","54","55"],"import { Form, Input, Checkbox, Button, Modal, message, List, Card, Descriptions } from 'antd';\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Favorite extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: 3,\r\n            favoriteList: null,\r\n            deleteInfo: {\r\n                user: '',\r\n                room: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ user: window.localStorage.getItem(\"user\")  }, () => {\r\n            console.log(\"state\", this.state.user);\r\n        });\r\n        this.getFavorite();\r\n    }\r\n\r\n    // onFinish = (values) => {\r\n    //     console.log(\"values\", values);\r\n    //     const deleteInfo = { user: values.user, room: values.room };\r\n    //     axios.post('/pillow/favorite/deleteFavorite/', deleteInfo).then((res) => {\r\n    //         console.log(\"res\", res);\r\n    //         if (res.data.response.error === 'OK') {\r\n    //             message.info(\"You've deleted successfully!\");\r\n    //         } else {\r\n    //             message.error(\"This is an error message\");\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    getFavorite = () => {\r\n        const request = {user: this.state.user};\r\n        axios.post('/pillow/favorite/query_all_favorite/', request).then(res => {\r\n            console.log(res);\r\n            if (res?.data?.response?.results) {\r\n                this.setState({favoriteList: res?.data?.response?.results})\r\n            }\r\n        }).catch(e => console.log(e));\r\n    };\r\n\r\n    deleteFav = (room_id) => {\r\n        const deleteInfo = { user: this.state.user, room: room_id };\r\n        axios.post('/pillow/favorite/deleteFavorite/', deleteInfo).then((res) => {\r\n            console.log(\"res\", res);\r\n            if (res.data.response.error === 'OK') {\r\n                message.info(\"You've deleted successfully!\");\r\n                this.getFavorite();\r\n            } else {\r\n                message.error(\"This is an error message\");\r\n            }\r\n        });\r\n    }\r\n\r\n    getFavorite = () => {\r\n        const request = {user: this.state.user};\r\n        axios.post('/pillow/favorite/query_all_favorite/', request).then(res => {\r\n            console.log(res);\r\n            if (res?.data?.response?.results) {\r\n                this.setState({favoriteList: res?.data?.response?.results})\r\n            }\r\n        }).catch(e => console.log(e));\r\n    };\r\n\r\n    favoriteList = () => (\r\n        <List \r\n            grid={{ gutter: 16, column: 4 }}\r\n            dataSource={this.state.favoriteList}\r\n            renderItem={item => (\r\n            <List.Item>\r\n                <Card title=\"Room ID\">{item}</Card>\r\n                <Button onClick={() => {\r\n                    this.deleteFav(item)\r\n                }}>Delete</Button>\r\n            </List.Item>\r\n            )}  \r\n        />\r\n    );\r\n\r\n    render() {\r\n        return <div>\r\n                {/* <Form\r\n                    name=\"basic\"\r\n                    labelCol={{ span: 8 }}\r\n                    wrapperCol={{ span: 16 }}\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={this.onFinish}\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <Form.Item\r\n                        label=\"User_id\"\r\n                        name=\"user\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input the user id for the record',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Room_id\"\r\n                        name=\"room\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input the room id for the record!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        wrapperCol={{\r\n                            offset: 8,\r\n                            span: 16,\r\n                        }}\r\n                    >\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Delete\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form> */}\r\n                {this.state.favoriteList && this.favoriteList()} \r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default Favorite;","E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\Signup.js",["56","57","58"],"import { Form, Input, Checkbox, Button, Modal, message } from 'antd';\r\nimport React, { useState, Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Signup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signupInfo: {\r\n                name: '',\r\n                password: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    onFinish = (values) => {\r\n        console.log(\"values\", values);\r\n        const signInfo = { name: values.username, password: values.password };\r\n        // this.setState({signupInfo: {name: values.username, password: values.password}}, () => {\r\n        console.log(signInfo);\r\n        axios.post('/pillow/user-signup/', signInfo).then((res) => {\r\n            console.log(\"res\", res);\r\n            if (res.data.response.error === 'OK') {\r\n                message.info(\"You've signed up successfully!\");\r\n            } else {\r\n                message.error(\"This is an error message\");\r\n            }\r\n        });\r\n        // });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Form\r\n                    name=\"basic\"\r\n                    labelCol={{ span: 8 }}\r\n                    wrapperCol={{ span: 16 }}\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={this.onFinish}\r\n                    // onFinishFailed={onFinishFailed}\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <Form.Item\r\n                        label=\"Username\"\r\n                        name=\"username\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your username!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Password\"\r\n                        name=\"password\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your password!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"confirm\"\r\n                        label=\"Confirm Password\"\r\n                        dependencies={['password']}\r\n                        hasFeedback\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please confirm your password!',\r\n                            },\r\n                            ({ getFieldValue }) => ({\r\n                                validator(_, value) {\r\n                                    if (!value || getFieldValue('password') === value) {\r\n                                        return Promise.resolve();\r\n                                    }\r\n                                    return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                                },\r\n                            }),\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        wrapperCol={{\r\n                            offset: 8,\r\n                            span: 16,\r\n                        }}\r\n                    >\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Sign up\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup;","E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\Signin.js",["59","60","61","62"],"import { Form, Input, Checkbox, Button, Modal, message } from 'antd';\r\nimport React, { useState, Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Signin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    onFinish = (values) => {\r\n        console.log(\"values\", values);\r\n        const signinInfo = { name: values.username, password: values.password };\r\n        // this.setState({signupInfo: {name: values.username, password: values.password}}, () => {\r\n        console.log(signinInfo);\r\n        axios.post('/pillow/user-signin/', signinInfo).then((res) => {\r\n            console.log(\"res\", res);\r\n            if (res.data.response.error === 'OK') {\r\n                message.info(\"You've signed in successfully!\");\r\n                window.localStorage.setItem(\"user\",res.data.response.id)\r\n            } else {\r\n                message.error(\"Password is not correct\");\r\n            }\r\n        });\r\n        // });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Form\r\n                    name=\"basic\"\r\n                    labelCol={{ span: 8 }}\r\n                    wrapperCol={{ span: 16 }}\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={this.onFinish}\r\n                    // onFinishFailed={onFinishFailed}\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <Form.Item\r\n                        label=\"Username\"\r\n                        name=\"username\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your username!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Password\"\r\n                        name=\"password\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your password!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        wrapperCol={{\r\n                            offset: 8,\r\n                            span: 16,\r\n                        }}\r\n                    >\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Sign in\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signin;","E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\Search.js",["63","64"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Checkbox, Button, Divider, DatePicker, Input, InputNumber, Row, Col, Form, message, List, Descriptions } from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst CheckboxGroup = Checkbox.Group;\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search_value: {},\r\n            results: null\r\n        }\r\n    }\r\n\r\n    // Checkbox onchange\r\n    onChange = (checkedValue) => {\r\n        // let new_search_value = this.state.search_value;\r\n        // checkedValue.forEach(val => {\r\n        //     new_search_value[val] = true\r\n        // });\r\n        console.log(checkedValue);\r\n        // this.setState({ search_value: new_search_value }, () => {\r\n        //     console.log(\"state\", this.state.search_value);\r\n        // });\r\n    }\r\n\r\n    search = (searchValue) => {\r\n        // const searchValue = JSON.stringify(this.state.search_value);\r\n        axios.post('/pillow/search/adv_search/', searchValue).then(res => {\r\n            console.log(\"result\", res.data.response.results);\r\n            if (res?.data?.response?.error === \"NONE\") {\r\n                message.error(\"No result found!\");\r\n            }\r\n            if (res?.data?.response?.results !== '') {\r\n                const results = res.data.response.results;\r\n                console.log(results);\r\n                this.setState({ results });\r\n            }\r\n        }).catch(error => console.log(error.response));\r\n    }\r\n\r\n    resultList = () => {\r\n        const results = this.state.results;\r\n        return (<List\r\n            itemLayout=\"vertical\"\r\n            size=\"large\"\r\n            pagination={{pageSize: 5}}\r\n            dataSource={results}\r\n            renderItem={item => (\r\n                <List.Item\r\n                    key={item.id}\r\n                >\r\n                    <List.Item.Meta\r\n                        title={item.name}\r\n                        description={null}\r\n                    />\r\n                    <Descriptions title=\"Apartment Info\" bordered>\r\n                        <Descriptions.Item label=\"Address\">{item.address}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Utility\">{item.utility}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Gym\">{item.gym === 1 ? 'Yes' : 'No'}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Parking\">{item.parking === 1 ? 'Yes' : 'No'}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Laundry\">{item.laundry === 1 ? 'Yes' : 'No'}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Swimming pool\">{item.swimming_pool === 1 ? 'Yes' : 'No'}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Price Range\">${item.min_price}-{item.max_price}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Start date\">{item.start_date}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"End date\" span={2}>{item.end_date}</Descriptions.Item>\r\n                    </Descriptions>\r\n                </List.Item>)}\r\n            >\r\n        </List>);\r\n    }\r\n    // name = request.data.get('name') input\r\n    // gym = request.data.get('gym') boolean\r\n    // parking = request.data.get('parking') boolean\r\n    // utility = request.data.get('utility') int(0-6)\r\n    // laundry = request.data.get('laundry') boolean\r\n    // swimming_pool = request.data.get('swimming_pool') boolean\r\n    // min_price = request.data.get('min_price') input number\r\n    // max_price = request.data.get('max_price') input number\r\n    // start_date = request.data.get('start_date') input time \r\n    // mean_rate = request.data.get('mean_rate') >= input\r\n\r\n    // inputName = () => (<Input onChange={(e) => {\r\n    //     console.log();\r\n    // }} placeholder=\"Please input the apartment name you want to explore\"></Input>);\r\n\r\n    FourCheckboxGroup = ({ onChange }) => (<CheckboxGroup style={{ width: '40%' }} onChange={onChange}>\r\n        <Row>\r\n            <Col span={8}><Checkbox value=\"gym\">gym</Checkbox></Col>\r\n            <Col span={8}><Checkbox value=\"parking\">parking</Checkbox></Col>\r\n            <Col span={8}><Checkbox value=\"laundry\">laundry</Checkbox></Col>\r\n            <Col span={8}><Checkbox value=\"swimming_pool\">swimming_pool</Checkbox></Col>\r\n        </Row>\r\n    </CheckboxGroup>);\r\n\r\n    UtilityCheckboxGroup = ({ onChange }) => (<CheckboxGroup style={{ width: '40%' }} onChange={onChange}>\r\n        <Row>\r\n            <Col span={10}><Checkbox value=\"1\">water</Checkbox></Col>\r\n            <Col span={10}><Checkbox value=\"2\">electricity</Checkbox></Col>\r\n            <Col span={10}><Checkbox value=\"3\">network</Checkbox></Col>\r\n        </Row>\r\n    </CheckboxGroup>);\r\n\r\n    RoomCheckboxGroup = ({ onChange }) => (<CheckboxGroup style={{ width: '40%' }} onChange={onChange}>\r\n        <Row>\r\n            <Col span={8}><Checkbox value=\"1\">1</Checkbox></Col>\r\n            <Col span={8}><Checkbox value=\"2\">2</Checkbox></Col>\r\n            <Col span={8}><Checkbox value=\"3\">3</Checkbox></Col>\r\n            <Col span={8}><Checkbox value=\"4\">4</Checkbox></Col>\r\n        </Row>\r\n    </CheckboxGroup>)\r\n\r\n    onFinish = (value) => {\r\n        const { min_price, max_price, mean_rate, utility, bedroom_num, bathroom_num } = value;\r\n        const request = { min_price, max_price, mean_rate };\r\n        if (value.name && value.name !== \" \") {\r\n            request.name = value.name;\r\n        }\r\n        if (value.fourcheckbox) {\r\n            const checkedValue = value.fourcheckbox;\r\n            checkedValue.forEach(val => {\r\n                request[val] = true;\r\n            });\r\n        }\r\n        if (value.start_date) {\r\n            const standard = value.start_date.format(\"YYYY-MM-DD\");\r\n            request.start_date = standard;\r\n        }\r\n        if (utility) {\r\n            request.utility = utility.reduce((a, b) => parseInt(a) + parseInt(b));\r\n        }\r\n        if (min_price) {\r\n            request.min_price = min_price;\r\n        }\r\n        if (max_price) {\r\n            request.max_price = max_price;\r\n        }\r\n        if (mean_rate) {\r\n            request.mean_rate = mean_rate;\r\n        }\r\n        if (bedroom_num) {\r\n            request.bedroom_num = bedroom_num;\r\n        }\r\n        if (bathroom_num) {\r\n            request.bathroom_num = bathroom_num;\r\n        }\r\n        console.log(\"request value\", request);\r\n        this.search(request);\r\n    }\r\n\r\n    // the whole search form\r\n    form = () => (\r\n        <Form name=\"search_form\" onFinish={this.onFinish}>\r\n            <Form.Item name=\"name\">\r\n                <Input onChange={(e) => { console.log(\"input1\", e.target.value) }}\r\n                    placeholder=\"Please input the apartment name you want to explore\" />\r\n            </Form.Item>\r\n            <Form.Item name=\"fourcheckbox\">\r\n                <this.FourCheckboxGroup onChange={this.onChange} />\r\n            </Form.Item>\r\n            <Form.Item name=\"utility\" label=\"Utility (Rental Includes)\">\r\n                {/* <InputNumber min={0} max={6}></InputNumber> */}\r\n                <this.UtilityCheckboxGroup onChange={this.onChange}/>\r\n            </Form.Item>\r\n            <Form.Item name=\"min_price\" label=\"Min Price\">\r\n                <InputNumber min={500} max={1000}></InputNumber>\r\n            </Form.Item>\r\n            <Form.Item name=\"max_price\" label=\"Max Price\">\r\n                <InputNumber min={500} max={1000}></InputNumber>\r\n            </Form.Item>\r\n            <Form.Item name=\"start_date\" label=\"Start Date\">\r\n                <DatePicker></DatePicker>\r\n            </Form.Item>\r\n            <Form.Item name=\"mean_rate\" label=\"Min Rate\">\r\n                <InputNumber min={0} max={5} step={0.5}></InputNumber>\r\n            </Form.Item>\r\n            <Form.Item name=\"bedroom_num\" label=\"Bedroom Num\">\r\n                {/* <InputNumber min={0} max={4} step={1}></InputNumber> */}\r\n                <this.RoomCheckboxGroup />\r\n            </Form.Item>\r\n            <Form.Item name=\"bathroom_num\" label=\"Bathroom Num\">\r\n                {/* <InputNumber min={0} max={4} step={1}></InputNumber> */}\r\n                <this.RoomCheckboxGroup />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Search\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n\r\n    render() {\r\n        return (<div><h1>Search</h1>\r\n            < this.form />\r\n            {this.state.results && <this.resultList />}\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default Search;","E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\Resetpassword.js",["65","66","67","68"],"import { Form, Input, Checkbox, Button, Modal, message } from 'antd';\r\nimport React, { useState, Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Resetpassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    onFinish = (values) => {\r\n        console.log(\"values\", values);\r\n        const resetPasswordInfo = { name: values.username, password: values.password };\r\n        // this.setState({signupInfo: {name: values.username, password: values.password}}, () => {\r\n        console.log(resetPasswordInfo);\r\n        axios.post('/pillow/reset-password/', resetPasswordInfo).then((res) => {\r\n            console.log(\"res\", res);\r\n            if (res.data.response.error === 'OK') {\r\n                message.info(\"You've reset your password successfully!\");\r\n            } else {\r\n                message.error(\"Wrong message\");\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Form\r\n                    name=\"basic\"\r\n                    labelCol={{ span: 8 }}\r\n                    wrapperCol={{ span: 16 }}\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={this.onFinish}\r\n                    // onFinishFailed={onFinishFailed}\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <Form.Item\r\n                        label=\"Username\"\r\n                        name=\"username\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your username!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Password\"\r\n                        name=\"password\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your password!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        wrapperCol={{\r\n                            offset: 8,\r\n                            span: 16,\r\n                        }}\r\n                    >\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Reset\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resetpassword;","E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\Compare.js",["69","70","71","72","73","74","75","76","77","78","79"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Checkbox, Button, Divider, DatePicker, Input, InputNumber, Row, Col, Form, message, List, Descriptions } from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst CheckboxGroup = Checkbox.Group;\r\n\r\n\r\nclass Nested extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    info_apartment = () => {\r\n        const info = this.props.data;\r\n        return (<List\r\n            itemLayout=\"vertical\"\r\n            size=\"large\"\r\n            pagination={{pageSize: 5}}\r\n            dataSource={info}\r\n            renderItem={item => (\r\n                <List.Item\r\n                    key={item.id}\r\n                >\r\n                    <List.Item.Meta\r\n                        title={item.name}\r\n                        description={null}\r\n                    />\r\n                    <Descriptions title=\"Apartment Info\" bordered>\r\n                        <Descriptions.Item label=\"Name\">{item.name}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"MinPrice\">{item.min_price}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"MaxPrice\">{item.max_price}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Star\">{item.star}</Descriptions.Item>\r\n                    </Descriptions>\r\n                </List.Item>)}\r\n            >\r\n        </List>);\r\n    }\r\n    \r\n    render() {\r\n        return (<div>\r\n            {<this.info_apartment />}\r\n        </div>)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default class Compare extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            left_id: 9,\r\n            right_id: 10,\r\n            info_left: null,\r\n            info_right: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        // const searchValue = JSON.stringify(this.state.search_value);\r\n        const request = { left_id: this.state.left_id, right_id: this.state.right_id };\r\n        axios.post('/pillow/compare/show_compare_result/', request).then(res => {\r\n            console.log(res.data.response.info_left);\r\n            if (res?.data?.response?.error === \"error\") {\r\n                message.error(\"No result found!\");\r\n            }\r\n            if (res?.data?.response?.info_left !== '') {\r\n                const info_left = res.data.response.info_left;\r\n                const info_right = res.data.response.info_right;\r\n                console.log(info_left);\r\n                console.log(info_right);\r\n                this.setState({ info_left: info_left });\r\n                this.setState({ info_right: info_right })\r\n            }\r\n        }).catch(error => console.log(error.response));\r\n    }\r\n\r\n    // the whole search form\r\n    // form = () => (\r\n    //    <Form name=\"search_form\" onFinish={this.onFinish}>\r\n    //        <Form.Item name=\"name\">\r\n    //            <Input onChange={(e) => { console.log(\"input1\", e.target.value) }}\r\n    //                placeholder=\"Please input the apartment name you want to explore\" />\r\n    //        </Form.Item>\r\n    //        <Form.Item name=\"fourcheckbox\">\r\n    //            <this.FourCheckboxGroup onChange={this.onChange} />\r\n    //        </Form.Item>\r\n    //        <Form.Item name=\"utility\" label=\"Utility(0-6)\">\r\n    //            <InputNumber min={0} max={6}></InputNumber>\r\n    //        </Form.Item>\r\n    //        <Form.Item name=\"min_price\" label=\"Min Price\">\r\n    //            <InputNumber min={500} max={1000}></InputNumber>\r\n    //        </Form.Item>\r\n    //        <Form.Item name=\"max_price\" label=\"Max Price\">\r\n    //            <InputNumber min={500} max={1000}></InputNumber>\r\n    //        </Form.Item>\r\n    //        <Form.Item name=\"start_date\" label=\"Start Date\">\r\n    //            <DatePicker></DatePicker>\r\n    //        </Form.Item>\r\n    //        <Form.Item name=\"mean_rate\" label=\"Min Rate\">\r\n    //            <InputNumber min={0} max={5} step={0.5}></InputNumber>\r\n    //        </Form.Item>\r\n    //        <Form.Item name=\"bedroom_num\" label=\"Min Bedroom Num\">\r\n    //            {/* <InputNumber min={0} max={4} step={1}></InputNumber> */}\r\n    //            <this.RoomCheckboxGroup />\r\n    //        </Form.Item>\r\n    //        <Form.Item name=\"bathroom_num\" label=\"Min Bathroom Num\">\r\n    //            {/* <InputNumber min={0} max={4} step={1}></InputNumber> */}\r\n    //            <this.RoomCheckboxGroup />\r\n    //        </Form.Item>\r\n    //        <Form.Item>\r\n    //            <Button type=\"primary\" htmlType=\"submit\">\r\n    //                Search\r\n    //            </Button>\r\n    //        </Form.Item>\r\n    //    </Form>\r\n    // );\r\n\r\n    render() {\r\n        return (<div><h1>Compare</h1>\r\n            {this.state.results && <Nested data={this.state.info_left} />}\r\n        </div>)\r\n    }\r\n}\r\n\r\n","E:\\Django Project\\CS411\\utopillow\\rent_front\\src\\Main.js",["80","81","82","83","84"],"import { Layout, Menu, Dropdown } from 'antd';\r\nimport React, { useState, Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './css/main.css';\r\nimport { BulbTwoTone, HeartTwoTone, SmileTwoTone } from '@ant-design/icons';\r\n\r\nconst { Header, Content } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    my = (<Menu>\r\n        <Menu.Item></Menu.Item>\r\n    </Menu>);\r\n\r\n    render() {\r\n        return <Layout>\r\n            <Header>\r\n                <div className=\"logo\" />\r\n                <Menu className=\"nav-menu\" mode=\"horizontal\">\r\n                    <Menu.Item key=\"compare\" icon={<BulbTwoTone twoToneColor=\"#52c41a\" />}>\r\n                        Compare\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"favorite\" icon={<HeartTwoTone twoToneColor=\"#eb2f96\" />}>\r\n                        Favorite\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"user\" icon={<SmileTwoTone />}>\r\n                        My\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Header>\r\n            <Content>\r\n                <div className=\"content\"></div>\r\n            </Content>\r\n        </Layout>\r\n    }\r\n}\r\n\r\nexport default Main;",{"ruleId":"85","severity":1,"message":"86","line":3,"column":25,"nodeType":"87","messageId":"88","endLine":3,"endColumn":32},{"ruleId":"85","severity":1,"message":"89","line":4,"column":43,"nodeType":"87","messageId":"88","endLine":4,"endColumn":49},{"ruleId":"85","severity":1,"message":"90","line":4,"column":58,"nodeType":"87","messageId":"88","endLine":4,"endColumn":62},{"ruleId":"85","severity":1,"message":"91","line":1,"column":10,"nodeType":"87","messageId":"88","endLine":1,"endColumn":14},{"ruleId":"85","severity":1,"message":"92","line":1,"column":16,"nodeType":"87","messageId":"88","endLine":1,"endColumn":21},{"ruleId":"85","severity":1,"message":"93","line":1,"column":23,"nodeType":"87","messageId":"88","endLine":1,"endColumn":31},{"ruleId":"85","severity":1,"message":"94","line":1,"column":41,"nodeType":"87","messageId":"88","endLine":1,"endColumn":46},{"ruleId":"85","severity":1,"message":"95","line":1,"column":69,"nodeType":"87","messageId":"88","endLine":1,"endColumn":81},{"ruleId":"85","severity":1,"message":"96","line":2,"column":28,"nodeType":"87","messageId":"88","endLine":2,"endColumn":36},{"ruleId":"85","severity":1,"message":"97","line":2,"column":38,"nodeType":"87","messageId":"88","endLine":2,"endColumn":47},{"ruleId":"85","severity":1,"message":"93","line":1,"column":23,"nodeType":"87","messageId":"88","endLine":1,"endColumn":31},{"ruleId":"85","severity":1,"message":"94","line":1,"column":41,"nodeType":"87","messageId":"88","endLine":1,"endColumn":46},{"ruleId":"85","severity":1,"message":"96","line":2,"column":17,"nodeType":"87","messageId":"88","endLine":2,"endColumn":25},{"ruleId":"85","severity":1,"message":"93","line":1,"column":23,"nodeType":"87","messageId":"88","endLine":1,"endColumn":31},{"ruleId":"85","severity":1,"message":"94","line":1,"column":41,"nodeType":"87","messageId":"88","endLine":1,"endColumn":46},{"ruleId":"85","severity":1,"message":"96","line":2,"column":17,"nodeType":"87","messageId":"88","endLine":2,"endColumn":25},{"ruleId":"98","severity":1,"message":"99","line":6,"column":5,"nodeType":"100","messageId":"101","endLine":8,"endColumn":6},{"ruleId":"85","severity":1,"message":"102","line":3,"column":28,"nodeType":"87","messageId":"88","endLine":3,"endColumn":35},{"ruleId":"85","severity":1,"message":"103","line":4,"column":8,"nodeType":"87","messageId":"88","endLine":4,"endColumn":14},{"ruleId":"85","severity":1,"message":"93","line":1,"column":23,"nodeType":"87","messageId":"88","endLine":1,"endColumn":31},{"ruleId":"85","severity":1,"message":"94","line":1,"column":41,"nodeType":"87","messageId":"88","endLine":1,"endColumn":46},{"ruleId":"85","severity":1,"message":"96","line":2,"column":17,"nodeType":"87","messageId":"88","endLine":2,"endColumn":25},{"ruleId":"98","severity":1,"message":"99","line":6,"column":5,"nodeType":"100","messageId":"101","endLine":8,"endColumn":6},{"ruleId":"85","severity":1,"message":"104","line":3,"column":20,"nodeType":"87","messageId":"88","endLine":3,"endColumn":26},{"ruleId":"85","severity":1,"message":"102","line":3,"column":28,"nodeType":"87","messageId":"88","endLine":3,"endColumn":35},{"ruleId":"85","severity":1,"message":"105","line":3,"column":37,"nodeType":"87","messageId":"88","endLine":3,"endColumn":47},{"ruleId":"85","severity":1,"message":"92","line":3,"column":49,"nodeType":"87","messageId":"88","endLine":3,"endColumn":54},{"ruleId":"85","severity":1,"message":"106","line":3,"column":56,"nodeType":"87","messageId":"88","endLine":3,"endColumn":67},{"ruleId":"85","severity":1,"message":"107","line":3,"column":69,"nodeType":"87","messageId":"88","endLine":3,"endColumn":72},{"ruleId":"85","severity":1,"message":"108","line":3,"column":74,"nodeType":"87","messageId":"88","endLine":3,"endColumn":77},{"ruleId":"85","severity":1,"message":"91","line":3,"column":79,"nodeType":"87","messageId":"88","endLine":3,"endColumn":83},{"ruleId":"85","severity":1,"message":"103","line":4,"column":8,"nodeType":"87","messageId":"88","endLine":4,"endColumn":14},{"ruleId":"85","severity":1,"message":"109","line":6,"column":7,"nodeType":"87","messageId":"88","endLine":6,"endColumn":20},{"ruleId":"98","severity":1,"message":"99","line":10,"column":5,"nodeType":"100","messageId":"101","endLine":12,"endColumn":6},{"ruleId":"85","severity":1,"message":"110","line":1,"column":24,"nodeType":"87","messageId":"88","endLine":1,"endColumn":32},{"ruleId":"85","severity":1,"message":"96","line":2,"column":17,"nodeType":"87","messageId":"88","endLine":2,"endColumn":25},{"ruleId":"85","severity":1,"message":"90","line":3,"column":10,"nodeType":"87","messageId":"88","endLine":3,"endColumn":14},{"ruleId":"85","severity":1,"message":"111","line":8,"column":9,"nodeType":"87","messageId":"88","endLine":8,"endColumn":16},{"ruleId":"98","severity":1,"message":"99","line":11,"column":5,"nodeType":"100","messageId":"101","endLine":13,"endColumn":6},"no-unused-vars","'history' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Link' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'Checkbox' is defined but never used.","'Modal' is defined but never used.","'Descriptions' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Divider' is defined but never used.","'moment' is defined but never used.","'Button' is defined but never used.","'DatePicker' is defined but never used.","'InputNumber' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'CheckboxGroup' is assigned a value but never used.","'Dropdown' is defined but never used.","'SubMenu' is assigned a value but never used."]