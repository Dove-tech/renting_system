[{"/Users/xidingjie/Desktop/code/git/renting_system/rent_front/src/index.js":"1","/Users/xidingjie/Desktop/code/git/renting_system/rent_front/src/Signup.js":"2","/Users/xidingjie/Desktop/code/git/renting_system/rent_front/src/Signin.js":"3","/Users/xidingjie/Desktop/code/git/renting_system/rent_front/src/Resetpassword.js":"4","/Users/xidingjie/Desktop/code/git/renting_system/rent_front/src/Search.js":"5","/Users/xidingjie/Desktop/code/git/renting_system/rent_front/src/Evaluate.js":"6","/Users/xidingjie/Desktop/code/git/renting_system/rent_front/src/Favorite.js":"7","/Users/xidingjie/Desktop/code/git/renting_system/rent_front/src/Detail.js":"8","/Users/xidingjie/Desktop/code/git/renting_system/rent_front/src/utils.js":"9"},{"size":3457,"mtime":1638344360956,"results":"10","hashOfConfig":"11"},{"size":3771,"mtime":1638320758207,"results":"12","hashOfConfig":"11"},{"size":2536,"mtime":1638341138366,"results":"13","hashOfConfig":"11"},{"size":2632,"mtime":1638320758207,"results":"14","hashOfConfig":"11"},{"size":8561,"mtime":1638341138366,"results":"15","hashOfConfig":"11"},{"size":2081,"mtime":1638339382353,"results":"16","hashOfConfig":"11"},{"size":3776,"mtime":1638346968043,"results":"17","hashOfConfig":"11"},{"size":2569,"mtime":1638346017495,"results":"18","hashOfConfig":"11"},{"size":520,"mtime":1638341138366,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1x7g0ut",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"23"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"43","usedDeprecatedRules":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"/Users/xidingjie/Desktop/code/git/renting_system/rent_front/src/index.js",["46","47"],"import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { hashHistory as history } from 'react-router';\nimport { BrowserRouter as Router, Routes, Switch, Route, Link } from 'react-router-dom';\nimport { Layout, Menu, Dropdown } from 'antd';\nimport { SearchOutlined, HeartTwoTone, SmileTwoTone, EyeOutlined } from '@ant-design/icons';\nimport './css/main.css';\nimport './index.css';\nimport Favorite from './Favorite';\nimport Signup from './Signup';\nimport Signin from './Signin';\nimport Resetpassword from './Resetpassword';\nimport Search from './Search';\n// import Main from './Main';\n// import Compare from './Compare';\nimport Detail from './Detail';\nimport Evaluate from './Evaluate';\n\nconst { Header, Content } = Layout;\n\nconst myMenu = (\n  <Menu>\n    {/* <Link to=\"/signup\"><Menu.Item>Sign Up</Menu.Item></Link>\n    <Link to=\"/signin\"><Menu.Item>Sign In</Menu.Item></Link> */}\n    <Link to=\"/resetpassword\"><Menu.Item>Reset Password</Menu.Item></Link>\n    <Menu.Item>Log Out</Menu.Item>\n  </Menu>\n);\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userId: null\n    }\n  }\n  \n  componentDidUpdate() {\n  }\n\n  // Sign in set userId\n  returnUser = (userId) => {\n    console.log(\"get userId\", userId);\n    this.setState({userId});\n  }\n\n  render() {\n    return <Router>\n      <Layout>\n        <Header>\n          <div className=\"logo\" />\n          <Menu className=\"nav-menu\" mode=\"horizontal\">\n            <Menu.Item key=\"search\" icon={<SearchOutlined style={{ color: \"#52c41a\" }} />}>\n              <Link to='/search'>Search</Link>\n            </Menu.Item>\n            <Menu.Item key=\"evaluate\" icon={<EyeOutlined />}>\n              <Link to='/evaluate'>Evaluate</Link>\n            </Menu.Item>\n            <Menu.Item key=\"favorite\" icon={<HeartTwoTone twoToneColor=\"#eb2f96\" />}>\n              <Link to='/favorite'>Favorite</Link>\n            </Menu.Item>\n            {!this.state.userId ? <>\n              <Menu.Item key=\"register\">\n                <Link to='/signup'>Register</Link>\n              </Menu.Item>\n              <Menu.Item key=\"signin\">\n                <Link to='/signin'>Sign in</Link>\n              </Menu.Item>\n            </>\n              :\n              (<Dropdown overlay={myMenu}>\n                <Menu.Item key=\"user\" icon={<SmileTwoTone />}>My\n                </Menu.Item>\n              </Dropdown>)}\n          </Menu>\n        </Header>\n        <Content style={{ padding: '20px 50px' }}>\n          <Routes>\n            {/* <Route exact path='/' element={<Main />}></Route> */}\n            <Route exact path='/' element={<Signin />}></Route>\n            <Route exact path='/search' element={<Search userId={this.state.userId}/>} />\n            <Route exact path='/signup' element={<Signup />} />\n            <Route exact path='/signin' element={<Signin getUser={this.returnUser}/>} />\n            <Route exact path='/resetpassword' element={<Resetpassword userId={this.state.userId}/>} />\n            <Route exact path='/favorite' element={<Favorite userId={this.state.userId}/>} />\n            <Route exact path='/apartment' element={<Detail userId={this.state.userId}/>} />\n            <Route exact path='/evaluate' element={<Evaluate />}/>\n            {/* <Route exact path='/compare' element={<Compare />} /> */}\n          </Routes>\n        </Content>\n      </Layout>\n    </Router>;\n  }\n}\n\nReactDOM.render(\n  <Main />,\n  document.getElementById('root')\n);\n\n",["48","49"],"/Users/xidingjie/Desktop/code/git/renting_system/rent_front/src/Signup.js",["50","51","52"],"import { Form, Input, Checkbox, Button, Modal, message } from 'antd';\nimport React, { useState, Component } from 'react';\nimport axios from 'axios';\n\nclass Signup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            signupInfo: {\n                name: '',\n                password: ''\n            }\n        }\n    }\n\n    onFinish = (values) => {\n        console.log(\"values\", values);\n        const signInfo = { name: values.username, password: values.password };\n        // this.setState({signupInfo: {name: values.username, password: values.password}}, () => {\n        console.log(signInfo);\n        axios.post('/pillow/user-signup/', signInfo).then((res) => {\n            console.log(\"res\", res);\n            if (res.data.response.error === 'OK') {\n                message.info(\"You've signed up successfully!\");\n            } else {\n                message.error(\"This is an error message\");\n            }\n        });\n        // });\n    }\n\n    render() {\n        return (\n            <>\n                <Form\n                    name=\"basic\"\n                    labelCol={{ span: 8 }}\n                    wrapperCol={{ span: 16 }}\n                    initialValues={{ remember: true }}\n                    onFinish={this.onFinish}\n                    // onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Form.Item\n                        label=\"Username\"\n                        name=\"username\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your username!',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Password\"\n                        name=\"password\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your password!',\n                            },\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"confirm\"\n                        label=\"Confirm Password\"\n                        dependencies={['password']}\n                        hasFeedback\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please confirm your password!',\n                            },\n                            ({ getFieldValue }) => ({\n                                validator(_, value) {\n                                    if (!value || getFieldValue('password') === value) {\n                                        return Promise.resolve();\n                                    }\n                                    return Promise.reject(new Error('The two passwords that you entered do not match!'));\n                                },\n                            }),\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item\n                        wrapperCol={{\n                            offset: 8,\n                            span: 16,\n                        }}\n                    >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Sign up\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </>\n        )\n    }\n}\n\nexport default Signup;","/Users/xidingjie/Desktop/code/git/renting_system/rent_front/src/Signin.js",["53","54","55","56"],"import { Form, Input, Checkbox, Button, Modal, message, PageHeader } from \"antd\";\nimport React, { useState, Component } from \"react\";\nimport axios from \"axios\";\nimport { getCurrentUser } from \"./utils\";\n\nclass Signin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        userId: null\n    }\n  }\n\n//   componentDidUpdate() {\n//     const user = getCurrentUser()\n//     console.log(\"getCurrentUser\", user);\n//     if (user) {\n//         //   this.state.setState({userId: getCurrentUser()});\n//         this.props.getUser(user);\n//     }\n//   }\n\n  onFinish = values => {\n    console.log(\"values\", values);\n    const signinInfo = { name: values.username, password: values.password };\n    // this.setState({signupInfo: {name: values.username, password: values.password}}, () => {\n    console.log(signinInfo);\n    axios.post(\"/pillow/user-signin/\", signinInfo).then(res => {\n      console.log(\"res\", res);\n      if (res.data.response.error === \"OK\") {\n        const userId = res.data.response.id;\n        message.info(\"You've signed in successfully!\");\n        this.props.getUser(userId);\n        window.localStorage.setItem(\"user\", userId);\n      } else {\n        message.error(\"Password is not correct\");\n      }\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <PageHeader className=\"page-header\" title=\"Sign In\" backIcon={false} />\n        <Form\n          name=\"basic\"\n          labelCol={{ span: 4 }}\n          wrapperCol={{ span: 14 }}\n          initialValues={{ remember: true }}\n          onFinish={this.onFinish}\n          // onFinishFailed={onFinishFailed}\n          autoComplete=\"off\"\n        >\n          <Form.Item\n            label=\"Username\"\n            name=\"username\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your username!\"\n              }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your password!\"\n              }\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n          <Form.Item\n            wrapperCol={{\n              offset: 8,\n              span: 16\n            }}\n          >\n            <Button type=\"primary\" htmlType=\"submit\">\n              Sign in\n            </Button>\n          </Form.Item>\n        </Form>\n      </>\n    );\n  }\n}\n\nexport default Signin;\n","/Users/xidingjie/Desktop/code/git/renting_system/rent_front/src/Resetpassword.js",["57","58","59","60"],"import { Form, Input, Checkbox, Button, Modal, message } from 'antd';\nimport React, { useState, Component } from 'react';\nimport axios from 'axios';\n\nclass Resetpassword extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    onFinish = (values) => {\n        console.log(\"values\", values);\n        const resetPasswordInfo = { name: values.username, password: values.password };\n        // this.setState({signupInfo: {name: values.username, password: values.password}}, () => {\n        console.log(resetPasswordInfo);\n        axios.post('/pillow/reset-password/', resetPasswordInfo).then((res) => {\n            console.log(\"res\", res);\n            if (res.data.response.error === 'OK') {\n                message.info(\"You've reset your password successfully!\");\n            } else {\n                message.error(\"Wrong message\");\n            }\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <Form\n                    name=\"basic\"\n                    labelCol={{ span: 8 }}\n                    wrapperCol={{ span: 16 }}\n                    initialValues={{ remember: true }}\n                    onFinish={this.onFinish}\n                    // onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Form.Item\n                        label=\"Username\"\n                        name=\"username\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your username!',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Password\"\n                        name=\"password\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your password!',\n                            },\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item\n                        wrapperCol={{\n                            offset: 8,\n                            span: 16,\n                        }}\n                    >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Reset\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </>\n        )\n    }\n}\n\nexport default Resetpassword;","/Users/xidingjie/Desktop/code/git/renting_system/rent_front/src/Search.js",["61","62"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Checkbox, Button, Divider, DatePicker, Input, InputNumber, Row, Col, Form, message, List, Descriptions } from 'antd';\nimport moment from 'moment';\n\nconst CheckboxGroup = Checkbox.Group;\n\nclass Search extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            search_value: {},\n            results: null\n        }\n    }\n\n    // Checkbox onchange\n    onChange = (checkedValue) => {\n        // let new_search_value = this.state.search_value;\n        // checkedValue.forEach(val => {\n        //     new_search_value[val] = true\n        // });\n        console.log(checkedValue);\n        // this.setState({ search_value: new_search_value }, () => {\n        //     console.log(\"state\", this.state.search_value);\n        // });\n    }\n\n    search = (searchValue) => {\n        // const searchValue = JSON.stringify(this.state.search_value);\n        axios.post('/pillow/search/adv_search/', searchValue).then(res => {\n            console.log(\"result\", res.data.response.results);\n            if (res?.data?.response?.error === \"NONE\") {\n                message.error(\"No result found!\");\n            }\n            if (res?.data?.response?.results !== '') {\n                const results = res.data.response.results;\n                console.log(results);\n                this.setState({ results });\n            }\n        }).catch(error => console.log(error.response));\n    }\n\n    resultList = () => {\n        const results = this.state.results;\n        return (<List\n            itemLayout=\"vertical\"\n            size=\"large\"\n            pagination={{pageSize: 5}}\n            dataSource={results}\n            renderItem={item => (\n                <List.Item\n                    key={item.id}\n                >\n                    <List.Item.Meta\n                        title={item.name}\n                        description={null}\n                    />\n                    <Link to={{pathname: `/apartment/${item.id}`}}>\n                    <Descriptions title=\"Apartment Info\" bordered>\n                        <Descriptions.Item label=\"Address\">{item.address}</Descriptions.Item>\n                        <Descriptions.Item label=\"Utility\">{item.utility}</Descriptions.Item>\n                        <Descriptions.Item label=\"Gym\">{item.gym === 1 ? 'Yes' : 'No'}</Descriptions.Item>\n                        <Descriptions.Item label=\"Parking\">{item.parking === 1 ? 'Yes' : 'No'}</Descriptions.Item>\n                        <Descriptions.Item label=\"Laundry\">{item.laundry === 1 ? 'Yes' : 'No'}</Descriptions.Item>\n                        <Descriptions.Item label=\"Swimming pool\">{item.swimming_pool === 1 ? 'Yes' : 'No'}</Descriptions.Item>\n                        <Descriptions.Item label=\"Price Range\">${item.min_price}-{item.max_price}</Descriptions.Item>\n                        <Descriptions.Item label=\"Start date\">{item.start_date}</Descriptions.Item>\n                        <Descriptions.Item label=\"End date\" span={2}>{item.end_date}</Descriptions.Item>\n                    </Descriptions>\n                    </Link>\n                </List.Item>)\n               }\n            >\n        </List>);\n    }\n    // name = request.data.get('name') input\n    // gym = request.data.get('gym') boolean\n    // parking = request.data.get('parking') boolean\n    // utility = request.data.get('utility') int(0-6)\n    // laundry = request.data.get('laundry') boolean\n    // swimming_pool = request.data.get('swimming_pool') boolean\n    // min_price = request.data.get('min_price') input number\n    // max_price = request.data.get('max_price') input number\n    // start_date = request.data.get('start_date') input time \n    // mean_rate = request.data.get('mean_rate') >= input\n\n    // inputName = () => (<Input onChange={(e) => {\n    //     console.log();\n    // }} placeholder=\"Please input the apartment name you want to explore\"></Input>);\n\n    FourCheckboxGroup = ({ onChange }) => (<CheckboxGroup style={{ width: '40%' }} onChange={onChange}>\n        <Row>\n            <Col span={8}><Checkbox value=\"gym\">gym</Checkbox></Col>\n            <Col span={8}><Checkbox value=\"parking\">parking</Checkbox></Col>\n            <Col span={8}><Checkbox value=\"laundry\">laundry</Checkbox></Col>\n            <Col span={8}><Checkbox value=\"swimming_pool\">swimming_pool</Checkbox></Col>\n        </Row>\n    </CheckboxGroup>);\n\n    UtilityCheckboxGroup = ({ onChange }) => (<CheckboxGroup style={{ width: '40%' }} onChange={onChange}>\n        <Row>\n            <Col span={10}><Checkbox value=\"1\">water</Checkbox></Col>\n            <Col span={10}><Checkbox value=\"2\">electricity</Checkbox></Col>\n            <Col span={10}><Checkbox value=\"3\">network</Checkbox></Col>\n        </Row>\n    </CheckboxGroup>);\n\n    RoomCheckboxGroup = ({ onChange }) => (<CheckboxGroup style={{ width: '40%' }} onChange={onChange}>\n        <Row>\n            <Col span={8}><Checkbox value=\"1\">1</Checkbox></Col>\n            <Col span={8}><Checkbox value=\"2\">2</Checkbox></Col>\n            <Col span={8}><Checkbox value=\"3\">3</Checkbox></Col>\n            <Col span={8}><Checkbox value=\"4\">4</Checkbox></Col>\n        </Row>\n    </CheckboxGroup>)\n\n    onFinish = (value) => {\n        const { min_price, max_price, mean_rate, utility, bedroom_num, bathroom_num } = value;\n        const request = { min_price, max_price, mean_rate };\n        if (value.name && value.name !== \" \") {\n            request.name = value.name;\n        }\n        if (value.fourcheckbox) {\n            const checkedValue = value.fourcheckbox;\n            checkedValue.forEach(val => {\n                request[val] = true;\n            });\n        }\n        if (value.start_date) {\n            const standard = value.start_date.format(\"YYYY-MM-DD\");\n            request.start_date = standard;\n        }\n        if (utility) {\n            request.utility = utility.reduce((a, b) => parseInt(a) + parseInt(b));\n        }\n        if (min_price) {\n            request.min_price = min_price;\n        }\n        if (max_price) {\n            request.max_price = max_price;\n        }\n        if (mean_rate) {\n            request.mean_rate = mean_rate;\n        }\n        if (bedroom_num) {\n            request.bedroom_num = bedroom_num;\n        }\n        if (bathroom_num) {\n            request.bathroom_num = bathroom_num;\n        }\n        console.log(\"request value\", request);\n        this.search(request);\n    }\n\n    // the whole search form\n    form = () => (\n        <Form name=\"search_form\" onFinish={this.onFinish}>\n            <Form.Item name=\"name\">\n                <Input onChange={(e) => { console.log(\"input1\", e.target.value) }}\n                    placeholder=\"Please input the apartment name you want to explore\" />\n            </Form.Item>\n            <Form.Item name=\"fourcheckbox\">\n                <this.FourCheckboxGroup onChange={this.onChange} />\n            </Form.Item>\n            <Form.Item name=\"utility\" label=\"Utility (Rental Includes)\">\n                {/* <InputNumber min={0} max={6}></InputNumber> */}\n                <this.UtilityCheckboxGroup onChange={this.onChange}/>\n            </Form.Item>\n            <Form.Item name=\"min_price\" label=\"Min Price\">\n                <InputNumber min={500} max={1000}></InputNumber>\n            </Form.Item>\n            <Form.Item name=\"max_price\" label=\"Max Price\">\n                <InputNumber min={500} max={1000}></InputNumber>\n            </Form.Item>\n            <Form.Item name=\"start_date\" label=\"Start Date\">\n                <DatePicker></DatePicker>\n            </Form.Item>\n            <Form.Item name=\"mean_rate\" label=\"Min Rate\">\n                <InputNumber min={0} max={5} step={0.5}></InputNumber>\n            </Form.Item>\n            <Form.Item name=\"bedroom_num\" label=\"Bedroom Num\">\n                {/* <InputNumber min={0} max={4} step={1}></InputNumber> */}\n                <this.RoomCheckboxGroup />\n            </Form.Item>\n            <Form.Item name=\"bathroom_num\" label=\"Bathroom Num\">\n                {/* <InputNumber min={0} max={4} step={1}></InputNumber> */}\n                <this.RoomCheckboxGroup />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Search\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n\n    render() {\n        return (<div><h1>Search</h1>\n            <this.form />\n            {this.state.results && <this.resultList />}\n        </div>)\n    }\n}\n\nexport default Search;","/Users/xidingjie/Desktop/code/git/renting_system/rent_front/src/Evaluate.js",["63","64","65","66","67","68","69","70","71"],"import { Form, Input, Checkbox, Button, Modal, message, List, Card, Descriptions } from 'antd';\nimport React, { Component, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\nclass Evaluate extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apartmentList: null\n        }\n    }\n\n    componentDidMount() {\n        this.getApartment();\n    }\n\n    getApartment = () => {\n        axios.post('/pillow/apartmentlist/showApartment/').then(res => {\n            console.log(res);\n            if (res?.data?.response?.result) {\n                this.setState({apartmentList: res?.data?.response?.result})\n            }\n            console.log(this.state.apartmentList)\n        }).catch(e => console.log(e));\n    };\n\n    resultList = () => {\n        const results = this.state.apartmentList;\n        console.log(results)\n        return (<List\n            itemLayout=\"vertical\"\n            size=\"large\"\n            pagination={{pageSize: 5}}\n            dataSource={results}\n            renderItem={item => (\n                <List.Item\n                    key={item.id}\n                >\n                    <List.Item.Meta\n                        title={item.name}\n                        description={null}\n                    />\n                    <Descriptions title=\"Apartment Info\" bordered>\n                        <Descriptions.Item label=\"Address\">{item.address}</Descriptions.Item>\n                        <Descriptions.Item label=\"Location\">{item.location}</Descriptions.Item>\n                        <Descriptions.Item label=\"Description\">{item.description}</Descriptions.Item>\n                        <Descriptions.Item label=\"Evaluation\">{item.evaluation}</Descriptions.Item>\n                    </Descriptions>\n                </List.Item>)}\n            >\n        </List>);\n    }\n\n    render() {\n        console.log(this.state.apartmentList)\n        return (<div><h1>Apartments and their evaluation</h1>\n            {this.state.apartmentList && <this.resultList />}\n        </div>)\n    }\n}\n\nexport default Evaluate;","/Users/xidingjie/Desktop/code/git/renting_system/rent_front/src/Favorite.js",["72","73","74","75","76","77","78"],"/Users/xidingjie/Desktop/code/git/renting_system/rent_front/src/Detail.js",["79","80","81","82","83","84","85","86","87"],"import { Row, Col, Form, Input, Checkbox, Button, Modal, message, List, Card, Descriptions } from 'antd';\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nconst apartment_info = {\n  address: \"rlmHgokPGO\",\n  apartment_name: \"Elizabeth Macias\",\n  bathroom_num: \"1\",\n  bedroom_num: \"1\",\n  department_description: \"None\",\n  end_time: \"2023-10-29\",\n  gym: \"0\",\n  landlord_email: \"VSSreXR@gmail.com\",\n  landlord_name: \"Cliff Neeley\",\n  landlord_phone: \"645-234-3349\",\n  laundry: \"1\",\n  location: \"(48.55029, 26.28232)\",\n  max_price: \"640\",\n  min_price: \"539\",\n  parking: \"0\",\n  photo_link: \"https://liveatoctave.com/sites/liveatoctave.com/files/1539_06a.jpg\",\n  price: \"658.4\",\n  rating: 4,\n  room_description: \"None\",\n  start_time: \"2022-10-29\",\n  swimming_pool: \"0\",\n  utility: \"6\"\n};\n\nclass Detail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apartment_id: 269,\n      user_id: this.props.userId,\n      // apartment_id: this.props.location,\n      // apartment_id: this.props.match,\n      apartment_info: null\n    };\n  }\n\n  componentDidMount() {\n    this.getEverything();\n  }\n\n  getEverything = () => {\n    const request = { id: this.state.apartment_id }\n    axios.post('/pillow/search/fetchDetails/', request).then(res => {\n      console.log(res);\n      if (res?.data?.response?.results) {\n        this.setState({ apartment_info: res?.data?.response.results })\n      }\n    }).catch(e => console.log(e));\n  };\n\n  show_apart_info = () => {\n    return (\n      <Descriptions title=\"Apartment Info\" bordered>\n        <Descriptions.Item label=\"name\">\n          {/* {this.state.shown_apartment} */}\n        </Descriptions.Item>\n      </Descriptions>\n    );\n  }\n  addToFavorite = (room_id) => {\n    const request = {user_id: this.state.user_id, room_id: room_id}\n    axios.post('/pillow/search/addToFavorite/'. request).then(res => {\n      if (res?.data?.response?.error == \"successful\") {\n        console.log(res);\n        message.info(\"You have successfully added to your favorite list!\");\n      }\n    }).catch(e => console.log(e));\n  }\n\n  render() {\n    return (<div><h1>details</h1>\n      {this.state.apartment_info && <>\n        <div className=\"apart-photo\"></div>\n        <div className=\"apart-info\">\n          <Row>\n            <Col span={8}>{apartment_info.apartment_name}</Col>\n            <Col span={8}><Button></Button></Col>\n            <Col span={8}>{apartment_info.rating}</Col>\n          </Row>\n        </div>\n        <div className=\"room-info\"></div>\n      </>}\n    </div>)\n  }\n}\n\nexport default Detail;","/Users/xidingjie/Desktop/code/git/renting_system/rent_front/src/utils.js",[],{"ruleId":"88","severity":1,"message":"89","line":3,"column":25,"nodeType":"90","messageId":"91","endLine":3,"endColumn":32},{"ruleId":"88","severity":1,"message":"92","line":4,"column":43,"nodeType":"90","messageId":"91","endLine":4,"endColumn":49},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"88","severity":1,"message":"97","line":1,"column":23,"nodeType":"90","messageId":"91","endLine":1,"endColumn":31},{"ruleId":"88","severity":1,"message":"98","line":1,"column":41,"nodeType":"90","messageId":"91","endLine":1,"endColumn":46},{"ruleId":"88","severity":1,"message":"99","line":2,"column":17,"nodeType":"90","messageId":"91","endLine":2,"endColumn":25},{"ruleId":"88","severity":1,"message":"97","line":1,"column":23,"nodeType":"90","messageId":"91","endLine":1,"endColumn":31},{"ruleId":"88","severity":1,"message":"98","line":1,"column":41,"nodeType":"90","messageId":"91","endLine":1,"endColumn":46},{"ruleId":"88","severity":1,"message":"99","line":2,"column":17,"nodeType":"90","messageId":"91","endLine":2,"endColumn":25},{"ruleId":"88","severity":1,"message":"100","line":4,"column":10,"nodeType":"90","messageId":"91","endLine":4,"endColumn":24},{"ruleId":"88","severity":1,"message":"97","line":1,"column":23,"nodeType":"90","messageId":"91","endLine":1,"endColumn":31},{"ruleId":"88","severity":1,"message":"98","line":1,"column":41,"nodeType":"90","messageId":"91","endLine":1,"endColumn":46},{"ruleId":"88","severity":1,"message":"99","line":2,"column":17,"nodeType":"90","messageId":"91","endLine":2,"endColumn":25},{"ruleId":"101","severity":1,"message":"102","line":6,"column":5,"nodeType":"103","messageId":"104","endLine":8,"endColumn":6},{"ruleId":"88","severity":1,"message":"105","line":4,"column":28,"nodeType":"90","messageId":"91","endLine":4,"endColumn":35},{"ruleId":"88","severity":1,"message":"106","line":5,"column":8,"nodeType":"90","messageId":"91","endLine":5,"endColumn":14},{"ruleId":"88","severity":1,"message":"107","line":1,"column":10,"nodeType":"90","messageId":"91","endLine":1,"endColumn":14},{"ruleId":"88","severity":1,"message":"108","line":1,"column":16,"nodeType":"90","messageId":"91","endLine":1,"endColumn":21},{"ruleId":"88","severity":1,"message":"97","line":1,"column":23,"nodeType":"90","messageId":"91","endLine":1,"endColumn":31},{"ruleId":"88","severity":1,"message":"109","line":1,"column":33,"nodeType":"90","messageId":"91","endLine":1,"endColumn":39},{"ruleId":"88","severity":1,"message":"98","line":1,"column":41,"nodeType":"90","messageId":"91","endLine":1,"endColumn":46},{"ruleId":"88","severity":1,"message":"110","line":1,"column":48,"nodeType":"90","messageId":"91","endLine":1,"endColumn":55},{"ruleId":"88","severity":1,"message":"111","line":1,"column":63,"nodeType":"90","messageId":"91","endLine":1,"endColumn":67},{"ruleId":"88","severity":1,"message":"99","line":2,"column":28,"nodeType":"90","messageId":"91","endLine":2,"endColumn":36},{"ruleId":"88","severity":1,"message":"112","line":2,"column":38,"nodeType":"90","messageId":"91","endLine":2,"endColumn":47},{"ruleId":"88","severity":1,"message":"107","line":1,"column":10,"nodeType":"90","messageId":"91","endLine":1,"endColumn":14},{"ruleId":"88","severity":1,"message":"108","line":1,"column":16,"nodeType":"90","messageId":"91","endLine":1,"endColumn":21},{"ruleId":"88","severity":1,"message":"97","line":1,"column":23,"nodeType":"90","messageId":"91","endLine":1,"endColumn":31},{"ruleId":"88","severity":1,"message":"98","line":1,"column":41,"nodeType":"90","messageId":"91","endLine":1,"endColumn":46},{"ruleId":"88","severity":1,"message":"113","line":1,"column":69,"nodeType":"90","messageId":"91","endLine":1,"endColumn":81},{"ruleId":"88","severity":1,"message":"99","line":2,"column":28,"nodeType":"90","messageId":"91","endLine":2,"endColumn":36},{"ruleId":"88","severity":1,"message":"112","line":2,"column":38,"nodeType":"90","messageId":"91","endLine":2,"endColumn":47},{"ruleId":"88","severity":1,"message":"107","line":1,"column":20,"nodeType":"90","messageId":"91","endLine":1,"endColumn":24},{"ruleId":"88","severity":1,"message":"108","line":1,"column":26,"nodeType":"90","messageId":"91","endLine":1,"endColumn":31},{"ruleId":"88","severity":1,"message":"97","line":1,"column":33,"nodeType":"90","messageId":"91","endLine":1,"endColumn":41},{"ruleId":"88","severity":1,"message":"98","line":1,"column":51,"nodeType":"90","messageId":"91","endLine":1,"endColumn":56},{"ruleId":"88","severity":1,"message":"114","line":1,"column":67,"nodeType":"90","messageId":"91","endLine":1,"endColumn":71},{"ruleId":"88","severity":1,"message":"111","line":1,"column":73,"nodeType":"90","messageId":"91","endLine":1,"endColumn":77},{"ruleId":"88","severity":1,"message":"115","line":66,"column":11,"nodeType":"90","messageId":"91","endLine":66,"endColumn":18},{"ruleId":"116","severity":1,"message":"117","line":67,"column":16,"nodeType":"118","messageId":"119","endLine":67,"endColumn":56,"fix":"120"},{"ruleId":"121","severity":1,"message":"122","line":68,"column":38,"nodeType":"123","messageId":"124","endLine":68,"endColumn":40},"no-unused-vars","'history' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","no-native-reassign",["125"],"no-negated-in-lhs",["126"],"'Checkbox' is defined but never used.","'Modal' is defined but never used.","'useState' is defined but never used.","'getCurrentUser' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Divider' is defined but never used.","'moment' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'message' is defined but never used.","'Card' is defined but never used.","'useEffect' is defined but never used.","'Descriptions' is defined but never used.","'List' is defined but never used.","'request' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property request.","MemberExpression","unexpectedWhitespace",{"range":"127","text":"128"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",[1859,1861],"."]