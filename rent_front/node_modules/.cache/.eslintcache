[{"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/index.js":"1","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/reportWebVitals.js":"2","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Signin.js":"3","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Signup.js":"4","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Resetpassword.js":"5","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Favorite.js":"6","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Compare.js":"7","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Search.js":"8","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Detail.js":"9","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/utils.js":"10","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Evaluate.js":"11"},{"size":3471,"mtime":1638377217693,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1636512412664,"results":"14","hashOfConfig":"13"},{"size":2491,"mtime":1638353449572,"results":"15","hashOfConfig":"13"},{"size":3844,"mtime":1638353780064,"results":"16","hashOfConfig":"13"},{"size":2712,"mtime":1638353703597,"results":"17","hashOfConfig":"13"},{"size":4655,"mtime":1638377631798,"results":"18","hashOfConfig":"13"},{"size":4675,"mtime":1638341013834,"results":"19","hashOfConfig":"13"},{"size":8300,"mtime":1638378879779,"results":"20","hashOfConfig":"13"},{"size":5211,"mtime":1638379006107,"results":"21","hashOfConfig":"13"},{"size":753,"mtime":1638377987082,"results":"22","hashOfConfig":"13"},{"size":2074,"mtime":1638353610433,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1btteql",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/index.js",["50","51"],"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/reportWebVitals.js",[],["52","53"],"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Signin.js",["54","55","56","57"],"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Signup.js",[],"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Resetpassword.js",["58"],"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Favorite.js",["59","60"],"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Compare.js",["61","62","63","64","65","66","67","68","69","70","71"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Checkbox, Button, Divider, DatePicker, Input, InputNumber, Row, Col, Form, message, List, Descriptions } from 'antd';\nimport moment from 'moment';\n\nconst CheckboxGroup = Checkbox.Group;\n\n\nclass Nested extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    info_apartment = () => {\n        const info = this.props.data;\n        return (<List\n            itemLayout=\"vertical\"\n            size=\"large\"\n            pagination={{pageSize: 5}}\n            dataSource={info}\n            renderItem={item => (\n                <List.Item\n                    key={item.id}\n                >\n                    <List.Item.Meta\n                        title={item.name}\n                        description={null}\n                    />\n                    <Descriptions title=\"Apartment Info\" bordered>\n                        <Descriptions.Item label=\"Name\">{item.name}</Descriptions.Item>\n                        <Descriptions.Item label=\"MinPrice\">{item.min_price}</Descriptions.Item>\n                        <Descriptions.Item label=\"MaxPrice\">{item.max_price}</Descriptions.Item>\n                        <Descriptions.Item label=\"Star\">{item.star}</Descriptions.Item>\n                    </Descriptions>\n                </List.Item>)}\n            >\n        </List>);\n    }\n    \n    render() {\n        return (<div>\n            {<this.info_apartment />}\n        </div>)\n    }\n\n}\n\n\n\nexport default class Compare extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            left_id: 1,\n            right_id: 2,\n            info_left: null,\n            info_right: null\n        }\n    }\n\n    componentDidMount = () => {\n        // const searchValue = JSON.stringify(this.state.search_value);\n        const request = { left_id: this.state.left_id, right_id: this.state.right_id };\n        axios.post('/pillow/compare/show_compare_result/', request).then(res => {\n            console.log(res.data.response.info_left);\n            if (res?.data?.response?.error === \"error\") {\n                message.error(\"No result found!\");\n            }\n            if (res?.data?.response?.info_left !== '') {\n                const info_left = res.data.response.info_left;\n                const info_right = res.data.response.info_right;\n                console.log(info_left);\n                console.log(info_right);\n                this.setState({ info_left: info_left });\n                this.setState({ info_right: info_right })\n            }\n        }).catch(error => console.log(error.response));\n    }\n\n    // the whole search form\n    // form = () => (\n    //    <Form name=\"search_form\" onFinish={this.onFinish}>\n    //        <Form.Item name=\"name\">\n    //            <Input onChange={(e) => { console.log(\"input1\", e.target.value) }}\n    //                placeholder=\"Please input the apartment name you want to explore\" />\n    //        </Form.Item>\n    //        <Form.Item name=\"fourcheckbox\">\n    //            <this.FourCheckboxGroup onChange={this.onChange} />\n    //        </Form.Item>\n    //        <Form.Item name=\"utility\" label=\"Utility(0-6)\">\n    //            <InputNumber min={0} max={6}></InputNumber>\n    //        </Form.Item>\n    //        <Form.Item name=\"min_price\" label=\"Min Price\">\n    //            <InputNumber min={500} max={1000}></InputNumber>\n    //        </Form.Item>\n    //        <Form.Item name=\"max_price\" label=\"Max Price\">\n    //            <InputNumber min={500} max={1000}></InputNumber>\n    //        </Form.Item>\n    //        <Form.Item name=\"start_date\" label=\"Start Date\">\n    //            <DatePicker></DatePicker>\n    //        </Form.Item>\n    //        <Form.Item name=\"mean_rate\" label=\"Min Rate\">\n    //            <InputNumber min={0} max={5} step={0.5}></InputNumber>\n    //        </Form.Item>\n    //        <Form.Item name=\"bedroom_num\" label=\"Min Bedroom Num\">\n    //            {/* <InputNumber min={0} max={4} step={1}></InputNumber> */}\n    //            <this.RoomCheckboxGroup />\n    //        </Form.Item>\n    //        <Form.Item name=\"bathroom_num\" label=\"Min Bathroom Num\">\n    //            {/* <InputNumber min={0} max={4} step={1}></InputNumber> */}\n    //            <this.RoomCheckboxGroup />\n    //        </Form.Item>\n    //        <Form.Item>\n    //            <Button type=\"primary\" htmlType=\"submit\">\n    //                Search\n    //            </Button>\n    //        </Form.Item>\n    //    </Form>\n    // );\n\n    render() {\n        return (<div><h1>Compare</h1>\n            {this.state.results && <Nested data={this.state.info_left} />}\n        </div>)\n    }\n}\n\n","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Search.js",["72","73","74","75","76"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Checkbox, Button, PageHeader, DatePicker, Input, InputNumber, Row, Col, Form, message, List, Descriptions } from 'antd';\nimport moment from 'moment';\n\nconst CheckboxGroup = Checkbox.Group;\n\nclass Search extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            search_value: {},\n            results: null\n        }\n    }\n\n    search = (searchValue) => {\n        // const searchValue = JSON.stringify(this.state.search_value);\n        axios.post('/pillow/search/adv_search/', searchValue).then(res => {\n            console.log(\"result\", res.data.response.results);\n            if (res?.data?.response?.error === \"NONE\") {\n                message.error(\"No result found!\");\n            }\n            if (res?.data?.response?.results !== '') {\n                const results = res.data.response.results;\n                console.log(results);\n                this.setState({ results });\n            }\n        }).catch(error => console.log(error.response));\n    }\n\n    resultList = () => {\n        const results = this.state.results;\n        return (<List\n            itemLayout=\"vertical\"\n            size=\"large\"\n            pagination={{pageSize: 5}}\n            dataSource={results}\n            renderItem={item => (\n                <List.Item\n                    key={item.id}\n                >\n                    <List.Item.Meta\n                        title={item.name}\n                        description={null}\n                    />\n                    {/* <Link to={{pathname: `/apartment/${item.id}`}}> */}\n                    <Link to={{pathname: `/apartment?id=${item.id}`}}>\n                    <Descriptions title=\"Apartment Info\" bordered>\n                        <Descriptions.Item label=\"Address\">{item.address}</Descriptions.Item>\n                        <Descriptions.Item label=\"Utility\">{item.utility}</Descriptions.Item>\n                        <Descriptions.Item label=\"Gym\">{item.gym == 1 ? 'Yes' : 'No'}</Descriptions.Item>\n                        <Descriptions.Item label=\"Parking\">{item.parking == 1 ? 'Yes' : 'No'}</Descriptions.Item>\n                        <Descriptions.Item label=\"Laundry\">{item.laundry == 1 ? 'Yes' : 'No'}</Descriptions.Item>\n                        <Descriptions.Item label=\"Swimming pool\">{item.swimming_pool == 1 ? 'Yes' : 'No'}</Descriptions.Item>\n                        <Descriptions.Item label=\"Price Range\">${item.min_price}-{item.max_price}</Descriptions.Item>\n                        <Descriptions.Item label=\"Start date\">{item.start_date}</Descriptions.Item>\n                        <Descriptions.Item label=\"End date\" span={2}>{item.end_date}</Descriptions.Item>\n                    </Descriptions>\n                    </Link>\n                </List.Item>)\n               }\n            >\n        </List>);\n    }\n    // name = request.data.get('name') input\n    // gym = request.data.get('gym') boolean\n    // parking = request.data.get('parking') boolean\n    // utility = request.data.get('utility') int(0-6)\n    // laundry = request.data.get('laundry') boolean\n    // swimming_pool = request.data.get('swimming_pool') boolean\n    // min_price = request.data.get('min_price') input number\n    // max_price = request.data.get('max_price') input number\n    // start_date = request.data.get('start_date') input time \n    // mean_rate = request.data.get('mean_rate') >= input\n\n    // inputName = () => (<Input onChange={(e) => {\n    //     console.log();\n    // }} placeholder=\"Please input the apartment name you want to explore\"></Input>);\n\n    FourCheckboxGroup = ({ onChange }) => (<CheckboxGroup style={{ width: '40%' }} onChange={onChange}>\n        <Row>\n            <Col span={8}><Checkbox value=\"gym\">gym</Checkbox></Col>\n            <Col span={8}><Checkbox value=\"parking\">parking</Checkbox></Col>\n            <Col span={8}><Checkbox value=\"laundry\">laundry</Checkbox></Col>\n            <Col span={8}><Checkbox value=\"swimming_pool\">swimming_pool</Checkbox></Col>\n        </Row>\n    </CheckboxGroup>);\n\n    UtilityCheckboxGroup = ({ onChange }) => (<CheckboxGroup style={{ width: '40%' }} onChange={onChange}>\n        <Row>\n            <Col span={10}><Checkbox value=\"1\">water</Checkbox></Col>\n            <Col span={10}><Checkbox value=\"2\">electricity</Checkbox></Col>\n            <Col span={10}><Checkbox value=\"3\">network</Checkbox></Col>\n        </Row>\n    </CheckboxGroup>);\n\n    RoomCheckboxGroup = ({ onChange }) => (<CheckboxGroup style={{ width: '40%' }} onChange={onChange}>\n        <Row>\n            <Col span={8}><Checkbox value=\"1\">1</Checkbox></Col>\n            <Col span={8}><Checkbox value=\"2\">2</Checkbox></Col>\n            <Col span={8}><Checkbox value=\"3\">3</Checkbox></Col>\n            <Col span={8}><Checkbox value=\"4\">4</Checkbox></Col>\n        </Row>\n    </CheckboxGroup>)\n\n    onFinish = (value) => {\n        const { min_price, max_price, mean_rate, utility, bedroom_num, bathroom_num } = value;\n        const request = { min_price, max_price, mean_rate };\n        if (value.name && value.name !== \" \") {\n            request.name = value.name;\n        }\n        if (value.fourcheckbox) {\n            const checkedValue = value.fourcheckbox;\n            checkedValue.forEach(val => {\n                request[val] = true;\n            });\n        }\n        if (value.start_date) {\n            const standard = value.start_date.format(\"YYYY-MM-DD\");\n            request.start_date = standard;\n        }\n        if (utility) {\n            request.utility = utility.reduce((a, b) => parseInt(a) + parseInt(b));\n        }\n        if (min_price) {\n            request.min_price = min_price;\n        }\n        if (max_price) {\n            request.max_price = max_price;\n        }\n        if (mean_rate) {\n            request.mean_rate = mean_rate;\n        }\n        if (bedroom_num) {\n            request.bedroom_num = bedroom_num;\n        }\n        if (bathroom_num) {\n            request.bathroom_num = bathroom_num;\n        }\n        console.log(\"request value\", request);\n        this.search(request);\n    }\n\n    // the whole search form\n    form = () => (\n        <Form name=\"search_form\" onFinish={this.onFinish}>\n            <Form.Item name=\"name\">\n                <Input onChange={(e) => { console.log(\"input1\", e.target.value) }}\n                    placeholder=\"Please input the apartment name you want to explore\" />\n            </Form.Item>\n            <Form.Item name=\"fourcheckbox\">\n                <this.FourCheckboxGroup onChange={this.onChange} />\n            </Form.Item>\n            <Form.Item name=\"utility\" label=\"Utility (Rental Includes)\">\n                {/* <InputNumber min={0} max={6}></InputNumber> */}\n                <this.UtilityCheckboxGroup onChange={this.onChange}/>\n            </Form.Item>\n            <Form.Item name=\"min_price\" label=\"Min Price\">\n                <InputNumber min={500} max={1000}></InputNumber>\n            </Form.Item>\n            <Form.Item name=\"max_price\" label=\"Max Price\">\n                <InputNumber min={500} max={1000}></InputNumber>\n            </Form.Item>\n            <Form.Item name=\"start_date\" label=\"Start Date\">\n                <DatePicker></DatePicker>\n            </Form.Item>\n            <Form.Item name=\"mean_rate\" label=\"Min Rate\">\n                <InputNumber min={0} max={5} step={0.5}></InputNumber>\n            </Form.Item>\n            <Form.Item name=\"bedroom_num\" label=\"Bedroom Num\">\n                {/* <InputNumber min={0} max={4} step={1}></InputNumber> */}\n                <this.RoomCheckboxGroup />\n            </Form.Item>\n            <Form.Item name=\"bathroom_num\" label=\"Bathroom Num\">\n                {/* <InputNumber min={0} max={4} step={1}></InputNumber> */}\n                <this.RoomCheckboxGroup />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Search\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n\n    render() {\n        return (<div>\n            <PageHeader className=\"page-header\" title=\"Search\" backIcon={false} />\n            <this.form />\n            {this.state.results && <this.resultList />}\n        </div>)\n    }\n}\n\nexport default Search;",["77","78"],"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Detail.js",["79","80","81","82"],"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/utils.js",[],"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Evaluate.js",[],{"ruleId":"83","severity":1,"message":"84","line":3,"column":25,"nodeType":"85","messageId":"86","endLine":3,"endColumn":32},{"ruleId":"83","severity":1,"message":"87","line":4,"column":43,"nodeType":"85","messageId":"86","endLine":4,"endColumn":49},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"83","severity":1,"message":"92","line":1,"column":23,"nodeType":"85","messageId":"86","endLine":1,"endColumn":31},{"ruleId":"83","severity":1,"message":"93","line":1,"column":41,"nodeType":"85","messageId":"86","endLine":1,"endColumn":46},{"ruleId":"83","severity":1,"message":"94","line":2,"column":17,"nodeType":"85","messageId":"86","endLine":2,"endColumn":25},{"ruleId":"83","severity":1,"message":"95","line":4,"column":10,"nodeType":"85","messageId":"86","endLine":4,"endColumn":24},{"ruleId":"96","severity":1,"message":"97","line":6,"column":5,"nodeType":"98","messageId":"99","endLine":8,"endColumn":6},{"ruleId":"83","severity":1,"message":"94","line":2,"column":28,"nodeType":"85","messageId":"86","endLine":2,"endColumn":36},{"ruleId":"83","severity":1,"message":"100","line":2,"column":38,"nodeType":"85","messageId":"86","endLine":2,"endColumn":47},{"ruleId":"83","severity":1,"message":"101","line":3,"column":20,"nodeType":"85","messageId":"86","endLine":3,"endColumn":26},{"ruleId":"83","severity":1,"message":"102","line":3,"column":28,"nodeType":"85","messageId":"86","endLine":3,"endColumn":35},{"ruleId":"83","severity":1,"message":"103","line":3,"column":37,"nodeType":"85","messageId":"86","endLine":3,"endColumn":47},{"ruleId":"83","severity":1,"message":"104","line":3,"column":49,"nodeType":"85","messageId":"86","endLine":3,"endColumn":54},{"ruleId":"83","severity":1,"message":"105","line":3,"column":56,"nodeType":"85","messageId":"86","endLine":3,"endColumn":67},{"ruleId":"83","severity":1,"message":"106","line":3,"column":69,"nodeType":"85","messageId":"86","endLine":3,"endColumn":72},{"ruleId":"83","severity":1,"message":"107","line":3,"column":74,"nodeType":"85","messageId":"86","endLine":3,"endColumn":77},{"ruleId":"83","severity":1,"message":"108","line":3,"column":79,"nodeType":"85","messageId":"86","endLine":3,"endColumn":83},{"ruleId":"83","severity":1,"message":"109","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":14},{"ruleId":"83","severity":1,"message":"110","line":6,"column":7,"nodeType":"85","messageId":"86","endLine":6,"endColumn":20},{"ruleId":"96","severity":1,"message":"97","line":10,"column":5,"nodeType":"98","messageId":"99","endLine":12,"endColumn":6},{"ruleId":"83","severity":1,"message":"109","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":14},{"ruleId":"111","severity":1,"message":"112","line":53,"column":66,"nodeType":"113","messageId":"114","endLine":53,"endColumn":68},{"ruleId":"111","severity":1,"message":"112","line":54,"column":74,"nodeType":"113","messageId":"114","endLine":54,"endColumn":76},{"ruleId":"111","severity":1,"message":"112","line":55,"column":74,"nodeType":"113","messageId":"114","endLine":55,"endColumn":76},{"ruleId":"111","severity":1,"message":"112","line":56,"column":86,"nodeType":"113","messageId":"114","endLine":56,"endColumn":88},{"ruleId":"88","replacedBy":"115"},{"ruleId":"90","replacedBy":"116"},{"ruleId":"111","severity":1,"message":"112","line":80,"column":68,"nodeType":"113","messageId":"114","endLine":80,"endColumn":70},{"ruleId":"111","severity":1,"message":"112","line":81,"column":76,"nodeType":"113","messageId":"114","endLine":81,"endColumn":78},{"ruleId":"111","severity":1,"message":"112","line":82,"column":76,"nodeType":"113","messageId":"114","endLine":82,"endColumn":78},{"ruleId":"111","severity":1,"message":"112","line":83,"column":88,"nodeType":"113","messageId":"114","endLine":83,"endColumn":90},"no-unused-vars","'history' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","no-native-reassign",["117"],"no-negated-in-lhs",["118"],"'Checkbox' is defined but never used.","'Modal' is defined but never used.","'useState' is defined but never used.","'getCurrentUser' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'useEffect' is defined but never used.","'Button' is defined but never used.","'Divider' is defined but never used.","'DatePicker' is defined but never used.","'Input' is defined but never used.","'InputNumber' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Form' is defined but never used.","'moment' is defined but never used.","'CheckboxGroup' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["117"],["118"],"no-global-assign","no-unsafe-negation"]