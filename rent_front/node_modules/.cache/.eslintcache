[{"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/index.js":"1","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/reportWebVitals.js":"2","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Signin.js":"3","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Signup.js":"4","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Resetpassword.js":"5","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Favorite.js":"6","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Main.js":"7","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Compare.js":"8","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Search.js":"9","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Detail.js":"10","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/utils.js":"11","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Evaluate.js":"12"},{"size":3310,"mtime":1638341331151,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1636512412664,"results":"15","hashOfConfig":"14"},{"size":2536,"mtime":1638336373934,"results":"16","hashOfConfig":"14"},{"size":3771,"mtime":1636550140303,"results":"17","hashOfConfig":"14"},{"size":2632,"mtime":1636550132637,"results":"18","hashOfConfig":"14"},{"size":3770,"mtime":1638332203341,"results":"19","hashOfConfig":"14"},{"size":1060,"mtime":1638332691198,"results":"20","hashOfConfig":"14"},{"size":4675,"mtime":1638341013834,"results":"21","hashOfConfig":"14"},{"size":8561,"mtime":1638340720163,"results":"22","hashOfConfig":"14"},{"size":1231,"mtime":1638340930954,"results":"23","hashOfConfig":"14"},{"size":520,"mtime":1638333620125,"results":"24","hashOfConfig":"14"},{"size":2081,"mtime":1638341013835,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1btteql",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/index.js",["61","62"],"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/reportWebVitals.js",[],["63","64"],"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Signin.js",["65","66","67","68"],"import { Form, Input, Checkbox, Button, Modal, message, PageHeader } from \"antd\";\nimport React, { useState, Component } from \"react\";\nimport axios from \"axios\";\nimport { getCurrentUser } from \"./utils\";\n\nclass Signin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        userId: null\n    }\n  }\n\n//   componentDidUpdate() {\n//     const user = getCurrentUser()\n//     console.log(\"getCurrentUser\", user);\n//     if (user) {\n//         //   this.state.setState({userId: getCurrentUser()});\n//         this.props.getUser(user);\n//     }\n//   }\n\n  onFinish = values => {\n    console.log(\"values\", values);\n    const signinInfo = { name: values.username, password: values.password };\n    // this.setState({signupInfo: {name: values.username, password: values.password}}, () => {\n    console.log(signinInfo);\n    axios.post(\"/pillow/user-signin/\", signinInfo).then(res => {\n      console.log(\"res\", res);\n      if (res.data.response.error === \"OK\") {\n        const userId = res.data.response.id;\n        message.info(\"You've signed in successfully!\");\n        this.props.getUser(userId);\n        window.localStorage.setItem(\"user\", userId);\n      } else {\n        message.error(\"Password is not correct\");\n      }\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <PageHeader className=\"page-header\" title=\"Sign In\" backIcon={false} />\n        <Form\n          name=\"basic\"\n          labelCol={{ span: 4 }}\n          wrapperCol={{ span: 14 }}\n          initialValues={{ remember: true }}\n          onFinish={this.onFinish}\n          // onFinishFailed={onFinishFailed}\n          autoComplete=\"off\"\n        >\n          <Form.Item\n            label=\"Username\"\n            name=\"username\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your username!\"\n              }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your password!\"\n              }\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n          <Form.Item\n            wrapperCol={{\n              offset: 8,\n              span: 16\n            }}\n          >\n            <Button type=\"primary\" htmlType=\"submit\">\n              Sign in\n            </Button>\n          </Form.Item>\n        </Form>\n      </>\n    );\n  }\n}\n\nexport default Signin;\n",["69","70"],"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Signup.js",["71","72","73"],"import { Form, Input, Checkbox, Button, Modal, message } from 'antd';\nimport React, { useState, Component } from 'react';\nimport axios from 'axios';\n\nclass Signup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            signupInfo: {\n                name: '',\n                password: ''\n            }\n        }\n    }\n\n    onFinish = (values) => {\n        console.log(\"values\", values);\n        const signInfo = { name: values.username, password: values.password };\n        // this.setState({signupInfo: {name: values.username, password: values.password}}, () => {\n        console.log(signInfo);\n        axios.post('/pillow/user-signup/', signInfo).then((res) => {\n            console.log(\"res\", res);\n            if (res.data.response.error === 'OK') {\n                message.info(\"You've signed up successfully!\");\n            } else {\n                message.error(\"This is an error message\");\n            }\n        });\n        // });\n    }\n\n    render() {\n        return (\n            <>\n                <Form\n                    name=\"basic\"\n                    labelCol={{ span: 8 }}\n                    wrapperCol={{ span: 16 }}\n                    initialValues={{ remember: true }}\n                    onFinish={this.onFinish}\n                    // onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Form.Item\n                        label=\"Username\"\n                        name=\"username\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your username!',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Password\"\n                        name=\"password\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your password!',\n                            },\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"confirm\"\n                        label=\"Confirm Password\"\n                        dependencies={['password']}\n                        hasFeedback\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please confirm your password!',\n                            },\n                            ({ getFieldValue }) => ({\n                                validator(_, value) {\n                                    if (!value || getFieldValue('password') === value) {\n                                        return Promise.resolve();\n                                    }\n                                    return Promise.reject(new Error('The two passwords that you entered do not match!'));\n                                },\n                            }),\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item\n                        wrapperCol={{\n                            offset: 8,\n                            span: 16,\n                        }}\n                    >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Sign up\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </>\n        )\n    }\n}\n\nexport default Signup;","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Resetpassword.js",["74","75","76","77"],"import { Form, Input, Checkbox, Button, Modal, message } from 'antd';\nimport React, { useState, Component } from 'react';\nimport axios from 'axios';\n\nclass Resetpassword extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    onFinish = (values) => {\n        console.log(\"values\", values);\n        const resetPasswordInfo = { name: values.username, password: values.password };\n        // this.setState({signupInfo: {name: values.username, password: values.password}}, () => {\n        console.log(resetPasswordInfo);\n        axios.post('/pillow/reset-password/', resetPasswordInfo).then((res) => {\n            console.log(\"res\", res);\n            if (res.data.response.error === 'OK') {\n                message.info(\"You've reset your password successfully!\");\n            } else {\n                message.error(\"Wrong message\");\n            }\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <Form\n                    name=\"basic\"\n                    labelCol={{ span: 8 }}\n                    wrapperCol={{ span: 16 }}\n                    initialValues={{ remember: true }}\n                    onFinish={this.onFinish}\n                    // onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Form.Item\n                        label=\"Username\"\n                        name=\"username\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your username!',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Password\"\n                        name=\"password\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your password!',\n                            },\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item\n                        wrapperCol={{\n                            offset: 8,\n                            span: 16,\n                        }}\n                    >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Reset\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </>\n        )\n    }\n}\n\nexport default Resetpassword;","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Favorite.js",["78","79","80","81","82","83","84"],"import { Form, Input, Checkbox, Button, Modal, message, List, Card, Descriptions } from 'antd';\nimport React, { Component, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\nclass Favorite extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: 3,\n            favoriteList: null,\n            deleteInfo: {\n                user: '',\n                room: ''\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ user: window.localStorage.getItem(\"user\")  }, () => {\n            console.log(\"state\", this.state.user);\n        });\n        this.getFavorite();\n    }\n\n    // onFinish = (values) => {\n    //     console.log(\"values\", values);\n    //     const deleteInfo = { user: values.user, room: values.room };\n    //     axios.post('/pillow/favorite/deleteFavorite/', deleteInfo).then((res) => {\n    //         console.log(\"res\", res);\n    //         if (res.data.response.error === 'OK') {\n    //             message.info(\"You've deleted successfully!\");\n    //         } else {\n    //             message.error(\"This is an error message\");\n    //         }\n    //     });\n    // }\n\n    getFavorite = () => {\n        const request = {user: this.state.user};\n        axios.post('/pillow/favorite/query_all_favorite/', request).then(res => {\n            console.log(res);\n            if (res?.data?.response?.results) {\n                this.setState({favoriteList: res?.data?.response?.results})\n            }\n        }).catch(e => console.log(e));\n    };\n\n    deleteFav = (room_id) => {\n        const deleteInfo = { user: this.state.user, room: room_id };\n        axios.post('/pillow/favorite/deleteFavorite/', deleteInfo).then((res) => {\n            console.log(\"res\", res);\n            if (res.data.response.error === 'OK') {\n                message.info(\"You've deleted successfully!\");\n                this.getFavorite();\n            } else {\n                message.error(\"This is an error message\");\n            }\n        });\n    }\n\n    getFavorite = () => {\n        const request = {user: this.state.user};\n        axios.post('/pillow/favorite/query_all_favorite/', request).then(res => {\n            console.log(res);\n            if (res?.data?.response?.results) {\n                this.setState({favoriteList: res?.data?.response?.results})\n            }\n        }).catch(e => console.log(e));\n    };\n\n    favoriteList = () => (\n        <List \n            grid={{ gutter: 16, column: 4 }}\n            dataSource={this.state.favoriteList}\n            renderItem={item => (\n            <List.Item>\n                <Card title=\"Room ID\">{item}</Card>\n                <Button onClick={() => {\n                    this.deleteFav(item)\n                }}>Delete</Button>\n            </List.Item>\n            )}  \n        />\n    );\n\n    render() {\n        return <div>\n                {/* <Form\n                    name=\"basic\"\n                    labelCol={{ span: 8 }}\n                    wrapperCol={{ span: 16 }}\n                    initialValues={{ remember: true }}\n                    onFinish={this.onFinish}\n                    autoComplete=\"off\"\n                >\n                    <Form.Item\n                        label=\"User_id\"\n                        name=\"user\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input the user id for the record',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Room_id\"\n                        name=\"room\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input the room id for the record!',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        wrapperCol={{\n                            offset: 8,\n                            span: 16,\n                        }}\n                    >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Delete\n                        </Button>\n                    </Form.Item>\n                </Form> */}\n                {this.state.favoriteList && this.favoriteList()} \n        </div>;\n    }\n}\n\nexport default Favorite;","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Main.js",["85","86","87","88","89"],"import { Layout, Menu, Dropdown } from 'antd';\nimport React, { useState, Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './css/main.css';\nimport { BulbTwoTone, HeartTwoTone, SmileTwoTone } from '@ant-design/icons';\n\nconst { Header, Content } = Layout;\nconst { SubMenu } = Menu;\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    my = (<Menu>\n        <Menu.Item></Menu.Item>\n    </Menu>);\n\n    render() {\n        return <Layout>\n            <Header>\n                <div className=\"logo\" />\n                <Menu className=\"nav-menu\" mode=\"horizontal\">\n                    <Menu.Item key=\"compare\" icon={<BulbTwoTone twoToneColor=\"#52c41a\" />}>\n                        Compare\n                    </Menu.Item>\n                    <Menu.Item key=\"favorite\" icon={<HeartTwoTone twoToneColor=\"#eb2f96\" />}>\n                        Favorite\n                    </Menu.Item>\n                    <Menu.Item key=\"user\" icon={<SmileTwoTone />}>\n                        My\n                    </Menu.Item>\n                </Menu>\n            </Header>\n            <Content>\n                <div className=\"content\"></div>\n            </Content>\n        </Layout>\n    }\n}\n\nexport default Main;","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Compare.js",["90","91","92","93","94","95","96","97","98","99","100"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Checkbox, Button, Divider, DatePicker, Input, InputNumber, Row, Col, Form, message, List, Descriptions } from 'antd';\nimport moment from 'moment';\n\nconst CheckboxGroup = Checkbox.Group;\n\n\nclass Nested extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    info_apartment = () => {\n        const info = this.props.data;\n        return (<List\n            itemLayout=\"vertical\"\n            size=\"large\"\n            pagination={{pageSize: 5}}\n            dataSource={info}\n            renderItem={item => (\n                <List.Item\n                    key={item.id}\n                >\n                    <List.Item.Meta\n                        title={item.name}\n                        description={null}\n                    />\n                    <Descriptions title=\"Apartment Info\" bordered>\n                        <Descriptions.Item label=\"Name\">{item.name}</Descriptions.Item>\n                        <Descriptions.Item label=\"MinPrice\">{item.min_price}</Descriptions.Item>\n                        <Descriptions.Item label=\"MaxPrice\">{item.max_price}</Descriptions.Item>\n                        <Descriptions.Item label=\"Star\">{item.star}</Descriptions.Item>\n                    </Descriptions>\n                </List.Item>)}\n            >\n        </List>);\n    }\n    \n    render() {\n        return (<div>\n            {<this.info_apartment />}\n        </div>)\n    }\n\n}\n\n\n\nexport default class Compare extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            left_id: 1,\n            right_id: 2,\n            info_left: null,\n            info_right: null\n        }\n    }\n\n    componentDidMount = () => {\n        // const searchValue = JSON.stringify(this.state.search_value);\n        const request = { left_id: this.state.left_id, right_id: this.state.right_id };\n        axios.post('/pillow/compare/show_compare_result/', request).then(res => {\n            console.log(res.data.response.info_left);\n            if (res?.data?.response?.error === \"error\") {\n                message.error(\"No result found!\");\n            }\n            if (res?.data?.response?.info_left !== '') {\n                const info_left = res.data.response.info_left;\n                const info_right = res.data.response.info_right;\n                console.log(info_left);\n                console.log(info_right);\n                this.setState({ info_left: info_left });\n                this.setState({ info_right: info_right })\n            }\n        }).catch(error => console.log(error.response));\n    }\n\n    // the whole search form\n    // form = () => (\n    //    <Form name=\"search_form\" onFinish={this.onFinish}>\n    //        <Form.Item name=\"name\">\n    //            <Input onChange={(e) => { console.log(\"input1\", e.target.value) }}\n    //                placeholder=\"Please input the apartment name you want to explore\" />\n    //        </Form.Item>\n    //        <Form.Item name=\"fourcheckbox\">\n    //            <this.FourCheckboxGroup onChange={this.onChange} />\n    //        </Form.Item>\n    //        <Form.Item name=\"utility\" label=\"Utility(0-6)\">\n    //            <InputNumber min={0} max={6}></InputNumber>\n    //        </Form.Item>\n    //        <Form.Item name=\"min_price\" label=\"Min Price\">\n    //            <InputNumber min={500} max={1000}></InputNumber>\n    //        </Form.Item>\n    //        <Form.Item name=\"max_price\" label=\"Max Price\">\n    //            <InputNumber min={500} max={1000}></InputNumber>\n    //        </Form.Item>\n    //        <Form.Item name=\"start_date\" label=\"Start Date\">\n    //            <DatePicker></DatePicker>\n    //        </Form.Item>\n    //        <Form.Item name=\"mean_rate\" label=\"Min Rate\">\n    //            <InputNumber min={0} max={5} step={0.5}></InputNumber>\n    //        </Form.Item>\n    //        <Form.Item name=\"bedroom_num\" label=\"Min Bedroom Num\">\n    //            {/* <InputNumber min={0} max={4} step={1}></InputNumber> */}\n    //            <this.RoomCheckboxGroup />\n    //        </Form.Item>\n    //        <Form.Item name=\"bathroom_num\" label=\"Min Bathroom Num\">\n    //            {/* <InputNumber min={0} max={4} step={1}></InputNumber> */}\n    //            <this.RoomCheckboxGroup />\n    //        </Form.Item>\n    //        <Form.Item>\n    //            <Button type=\"primary\" htmlType=\"submit\">\n    //                Search\n    //            </Button>\n    //        </Form.Item>\n    //    </Form>\n    // );\n\n    render() {\n        return (<div><h1>Compare</h1>\n            {this.state.results && <Nested data={this.state.info_left} />}\n        </div>)\n    }\n}\n\n","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Search.js",["101","102"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Checkbox, Button, Divider, DatePicker, Input, InputNumber, Row, Col, Form, message, List, Descriptions } from 'antd';\nimport moment from 'moment';\n\nconst CheckboxGroup = Checkbox.Group;\n\nclass Search extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            search_value: {},\n            results: null\n        }\n    }\n\n    // Checkbox onchange\n    onChange = (checkedValue) => {\n        // let new_search_value = this.state.search_value;\n        // checkedValue.forEach(val => {\n        //     new_search_value[val] = true\n        // });\n        console.log(checkedValue);\n        // this.setState({ search_value: new_search_value }, () => {\n        //     console.log(\"state\", this.state.search_value);\n        // });\n    }\n\n    search = (searchValue) => {\n        // const searchValue = JSON.stringify(this.state.search_value);\n        axios.post('/pillow/search/adv_search/', searchValue).then(res => {\n            console.log(\"result\", res.data.response.results);\n            if (res?.data?.response?.error === \"NONE\") {\n                message.error(\"No result found!\");\n            }\n            if (res?.data?.response?.results !== '') {\n                const results = res.data.response.results;\n                console.log(results);\n                this.setState({ results });\n            }\n        }).catch(error => console.log(error.response));\n    }\n\n    resultList = () => {\n        const results = this.state.results;\n        return (<List\n            itemLayout=\"vertical\"\n            size=\"large\"\n            pagination={{pageSize: 5}}\n            dataSource={results}\n            renderItem={item => (\n                <List.Item\n                    key={item.id}\n                >\n                    <List.Item.Meta\n                        title={item.name}\n                        description={null}\n                    />\n                    <Link to={{pathname: `/apartment/${item.id}`}}>\n                    <Descriptions title=\"Apartment Info\" bordered>\n                        <Descriptions.Item label=\"Address\">{item.address}</Descriptions.Item>\n                        <Descriptions.Item label=\"Utility\">{item.utility}</Descriptions.Item>\n                        <Descriptions.Item label=\"Gym\">{item.gym === 1 ? 'Yes' : 'No'}</Descriptions.Item>\n                        <Descriptions.Item label=\"Parking\">{item.parking === 1 ? 'Yes' : 'No'}</Descriptions.Item>\n                        <Descriptions.Item label=\"Laundry\">{item.laundry === 1 ? 'Yes' : 'No'}</Descriptions.Item>\n                        <Descriptions.Item label=\"Swimming pool\">{item.swimming_pool === 1 ? 'Yes' : 'No'}</Descriptions.Item>\n                        <Descriptions.Item label=\"Price Range\">${item.min_price}-{item.max_price}</Descriptions.Item>\n                        <Descriptions.Item label=\"Start date\">{item.start_date}</Descriptions.Item>\n                        <Descriptions.Item label=\"End date\" span={2}>{item.end_date}</Descriptions.Item>\n                    </Descriptions>\n                    </Link>\n                </List.Item>)\n               }\n            >\n        </List>);\n    }\n    // name = request.data.get('name') input\n    // gym = request.data.get('gym') boolean\n    // parking = request.data.get('parking') boolean\n    // utility = request.data.get('utility') int(0-6)\n    // laundry = request.data.get('laundry') boolean\n    // swimming_pool = request.data.get('swimming_pool') boolean\n    // min_price = request.data.get('min_price') input number\n    // max_price = request.data.get('max_price') input number\n    // start_date = request.data.get('start_date') input time \n    // mean_rate = request.data.get('mean_rate') >= input\n\n    // inputName = () => (<Input onChange={(e) => {\n    //     console.log();\n    // }} placeholder=\"Please input the apartment name you want to explore\"></Input>);\n\n    FourCheckboxGroup = ({ onChange }) => (<CheckboxGroup style={{ width: '40%' }} onChange={onChange}>\n        <Row>\n            <Col span={8}><Checkbox value=\"gym\">gym</Checkbox></Col>\n            <Col span={8}><Checkbox value=\"parking\">parking</Checkbox></Col>\n            <Col span={8}><Checkbox value=\"laundry\">laundry</Checkbox></Col>\n            <Col span={8}><Checkbox value=\"swimming_pool\">swimming_pool</Checkbox></Col>\n        </Row>\n    </CheckboxGroup>);\n\n    UtilityCheckboxGroup = ({ onChange }) => (<CheckboxGroup style={{ width: '40%' }} onChange={onChange}>\n        <Row>\n            <Col span={10}><Checkbox value=\"1\">water</Checkbox></Col>\n            <Col span={10}><Checkbox value=\"2\">electricity</Checkbox></Col>\n            <Col span={10}><Checkbox value=\"3\">network</Checkbox></Col>\n        </Row>\n    </CheckboxGroup>);\n\n    RoomCheckboxGroup = ({ onChange }) => (<CheckboxGroup style={{ width: '40%' }} onChange={onChange}>\n        <Row>\n            <Col span={8}><Checkbox value=\"1\">1</Checkbox></Col>\n            <Col span={8}><Checkbox value=\"2\">2</Checkbox></Col>\n            <Col span={8}><Checkbox value=\"3\">3</Checkbox></Col>\n            <Col span={8}><Checkbox value=\"4\">4</Checkbox></Col>\n        </Row>\n    </CheckboxGroup>)\n\n    onFinish = (value) => {\n        const { min_price, max_price, mean_rate, utility, bedroom_num, bathroom_num } = value;\n        const request = { min_price, max_price, mean_rate };\n        if (value.name && value.name !== \" \") {\n            request.name = value.name;\n        }\n        if (value.fourcheckbox) {\n            const checkedValue = value.fourcheckbox;\n            checkedValue.forEach(val => {\n                request[val] = true;\n            });\n        }\n        if (value.start_date) {\n            const standard = value.start_date.format(\"YYYY-MM-DD\");\n            request.start_date = standard;\n        }\n        if (utility) {\n            request.utility = utility.reduce((a, b) => parseInt(a) + parseInt(b));\n        }\n        if (min_price) {\n            request.min_price = min_price;\n        }\n        if (max_price) {\n            request.max_price = max_price;\n        }\n        if (mean_rate) {\n            request.mean_rate = mean_rate;\n        }\n        if (bedroom_num) {\n            request.bedroom_num = bedroom_num;\n        }\n        if (bathroom_num) {\n            request.bathroom_num = bathroom_num;\n        }\n        console.log(\"request value\", request);\n        this.search(request);\n    }\n\n    // the whole search form\n    form = () => (\n        <Form name=\"search_form\" onFinish={this.onFinish}>\n            <Form.Item name=\"name\">\n                <Input onChange={(e) => { console.log(\"input1\", e.target.value) }}\n                    placeholder=\"Please input the apartment name you want to explore\" />\n            </Form.Item>\n            <Form.Item name=\"fourcheckbox\">\n                <this.FourCheckboxGroup onChange={this.onChange} />\n            </Form.Item>\n            <Form.Item name=\"utility\" label=\"Utility (Rental Includes)\">\n                {/* <InputNumber min={0} max={6}></InputNumber> */}\n                <this.UtilityCheckboxGroup onChange={this.onChange}/>\n            </Form.Item>\n            <Form.Item name=\"min_price\" label=\"Min Price\">\n                <InputNumber min={500} max={1000}></InputNumber>\n            </Form.Item>\n            <Form.Item name=\"max_price\" label=\"Max Price\">\n                <InputNumber min={500} max={1000}></InputNumber>\n            </Form.Item>\n            <Form.Item name=\"start_date\" label=\"Start Date\">\n                <DatePicker></DatePicker>\n            </Form.Item>\n            <Form.Item name=\"mean_rate\" label=\"Min Rate\">\n                <InputNumber min={0} max={5} step={0.5}></InputNumber>\n            </Form.Item>\n            <Form.Item name=\"bedroom_num\" label=\"Bedroom Num\">\n                {/* <InputNumber min={0} max={4} step={1}></InputNumber> */}\n                <this.RoomCheckboxGroup />\n            </Form.Item>\n            <Form.Item name=\"bathroom_num\" label=\"Bathroom Num\">\n                {/* <InputNumber min={0} max={4} step={1}></InputNumber> */}\n                <this.RoomCheckboxGroup />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Search\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n\n    render() {\n        return (<div><h1>Search</h1>\n            <this.form />\n            {this.state.results && <this.resultList />}\n        </div>)\n    }\n}\n\nexport default Search;","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Detail.js",["103","104","105","106","107","108","109","110"],"import { Form, Input, Checkbox, Button, Modal, message, List, Card, Descriptions } from 'antd';\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Detail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        apartment_id: 269,\n      user_id: this.props.userId,\n      // apartment_id: this.props.location,\n      // apartment_id: this.props.match,\n      shown_apartment: null\n    };\n  }\n\n  componentDidMount() {\n    this.getEverything();\n  }\n\n  getEverything = () => {\n    const request = { id: this.state.apartment_id }\n    axios.post('/pillow/search/fetchDetails/', request).then(res => {\n      console.log(res);\n      if (res?.data?.response?.results) {\n        this.setState({ shown_apartment: res?.data?.response.results })\n      }\n    }).catch(e => console.log(e));\n  };\n\n  show_apart_info = () => {\n    return (\n      <Descriptions title=\"Apartment Info\" bordered>\n        <Descriptions.Item label=\"name\">\n          {/* {this.state.shown_apartment} */}\n        </Descriptions.Item>\n      </Descriptions>\n    );\n  }\n\n  render() {\n    return (<div><h1>details</h1>\n      {this.state.shown_apartment && <this.show_apart_info />}\n    </div>)\n  }\n}\n\nexport default Detail;","/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/utils.js",[],"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Evaluate.js",["111","112","113","114","115","116","117","118","119"],"import { Form, Input, Checkbox, Button, Modal, message, List, Card, Descriptions } from 'antd';\nimport React, { Component, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\nclass Evaluate extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apartmentList: null\n        }\n    }\n\n    componentDidMount() {\n        this.getApartment();\n    }\n\n    getApartment = () => {\n        axios.post('/pillow/apartmentlist/showApartment/').then(res => {\n            console.log(res);\n            if (res?.data?.response?.result) {\n                this.setState({apartmentList: res?.data?.response?.result})\n            }\n            console.log(this.state.apartmentList)\n        }).catch(e => console.log(e));\n    };\n\n    resultList = () => {\n        const results = this.state.apartmentList;\n        console.log(results)\n        return (<List\n            itemLayout=\"vertical\"\n            size=\"large\"\n            pagination={{pageSize: 5}}\n            dataSource={results}\n            renderItem={item => (\n                <List.Item\n                    key={item.id}\n                >\n                    <List.Item.Meta\n                        title={item.name}\n                        description={null}\n                    />\n                    <Descriptions title=\"Apartment Info\" bordered>\n                        <Descriptions.Item label=\"Address\">{item.address}</Descriptions.Item>\n                        <Descriptions.Item label=\"Location\">{item.location}</Descriptions.Item>\n                        <Descriptions.Item label=\"Description\">{item.description}</Descriptions.Item>\n                        <Descriptions.Item label=\"Evaluation\">{item.evaluation}</Descriptions.Item>\n                    </Descriptions>\n                </List.Item>)}\n            >\n        </List>);\n    }\n\n    render() {\n        console.log(this.state.apartmentList)\n        return (<div><h1>Apartments and their evaluation</h1>\n            {this.state.apartmentList && <this.resultList />}\n        </div>)\n    }\n}\n\nexport default Evaluate;",{"ruleId":"120","severity":1,"message":"121","line":3,"column":25,"nodeType":"122","messageId":"123","endLine":3,"endColumn":32},{"ruleId":"120","severity":1,"message":"124","line":4,"column":43,"nodeType":"122","messageId":"123","endLine":4,"endColumn":49},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"120","severity":1,"message":"129","line":1,"column":23,"nodeType":"122","messageId":"123","endLine":1,"endColumn":31},{"ruleId":"120","severity":1,"message":"130","line":1,"column":41,"nodeType":"122","messageId":"123","endLine":1,"endColumn":46},{"ruleId":"120","severity":1,"message":"131","line":2,"column":17,"nodeType":"122","messageId":"123","endLine":2,"endColumn":25},{"ruleId":"120","severity":1,"message":"132","line":4,"column":10,"nodeType":"122","messageId":"123","endLine":4,"endColumn":24},{"ruleId":"125","replacedBy":"133"},{"ruleId":"127","replacedBy":"134"},{"ruleId":"120","severity":1,"message":"129","line":1,"column":23,"nodeType":"122","messageId":"123","endLine":1,"endColumn":31},{"ruleId":"120","severity":1,"message":"130","line":1,"column":41,"nodeType":"122","messageId":"123","endLine":1,"endColumn":46},{"ruleId":"120","severity":1,"message":"131","line":2,"column":17,"nodeType":"122","messageId":"123","endLine":2,"endColumn":25},{"ruleId":"120","severity":1,"message":"129","line":1,"column":23,"nodeType":"122","messageId":"123","endLine":1,"endColumn":31},{"ruleId":"120","severity":1,"message":"130","line":1,"column":41,"nodeType":"122","messageId":"123","endLine":1,"endColumn":46},{"ruleId":"120","severity":1,"message":"131","line":2,"column":17,"nodeType":"122","messageId":"123","endLine":2,"endColumn":25},{"ruleId":"135","severity":1,"message":"136","line":6,"column":5,"nodeType":"137","messageId":"138","endLine":8,"endColumn":6},{"ruleId":"120","severity":1,"message":"139","line":1,"column":10,"nodeType":"122","messageId":"123","endLine":1,"endColumn":14},{"ruleId":"120","severity":1,"message":"140","line":1,"column":16,"nodeType":"122","messageId":"123","endLine":1,"endColumn":21},{"ruleId":"120","severity":1,"message":"129","line":1,"column":23,"nodeType":"122","messageId":"123","endLine":1,"endColumn":31},{"ruleId":"120","severity":1,"message":"130","line":1,"column":41,"nodeType":"122","messageId":"123","endLine":1,"endColumn":46},{"ruleId":"120","severity":1,"message":"141","line":1,"column":69,"nodeType":"122","messageId":"123","endLine":1,"endColumn":81},{"ruleId":"120","severity":1,"message":"131","line":2,"column":28,"nodeType":"122","messageId":"123","endLine":2,"endColumn":36},{"ruleId":"120","severity":1,"message":"142","line":2,"column":38,"nodeType":"122","messageId":"123","endLine":2,"endColumn":47},{"ruleId":"120","severity":1,"message":"143","line":1,"column":24,"nodeType":"122","messageId":"123","endLine":1,"endColumn":32},{"ruleId":"120","severity":1,"message":"131","line":2,"column":17,"nodeType":"122","messageId":"123","endLine":2,"endColumn":25},{"ruleId":"120","severity":1,"message":"144","line":3,"column":10,"nodeType":"122","messageId":"123","endLine":3,"endColumn":14},{"ruleId":"120","severity":1,"message":"145","line":8,"column":9,"nodeType":"122","messageId":"123","endLine":8,"endColumn":16},{"ruleId":"135","severity":1,"message":"136","line":11,"column":5,"nodeType":"137","messageId":"138","endLine":13,"endColumn":6},{"ruleId":"120","severity":1,"message":"146","line":3,"column":20,"nodeType":"122","messageId":"123","endLine":3,"endColumn":26},{"ruleId":"120","severity":1,"message":"147","line":3,"column":28,"nodeType":"122","messageId":"123","endLine":3,"endColumn":35},{"ruleId":"120","severity":1,"message":"148","line":3,"column":37,"nodeType":"122","messageId":"123","endLine":3,"endColumn":47},{"ruleId":"120","severity":1,"message":"140","line":3,"column":49,"nodeType":"122","messageId":"123","endLine":3,"endColumn":54},{"ruleId":"120","severity":1,"message":"149","line":3,"column":56,"nodeType":"122","messageId":"123","endLine":3,"endColumn":67},{"ruleId":"120","severity":1,"message":"150","line":3,"column":69,"nodeType":"122","messageId":"123","endLine":3,"endColumn":72},{"ruleId":"120","severity":1,"message":"151","line":3,"column":74,"nodeType":"122","messageId":"123","endLine":3,"endColumn":77},{"ruleId":"120","severity":1,"message":"139","line":3,"column":79,"nodeType":"122","messageId":"123","endLine":3,"endColumn":83},{"ruleId":"120","severity":1,"message":"152","line":4,"column":8,"nodeType":"122","messageId":"123","endLine":4,"endColumn":14},{"ruleId":"120","severity":1,"message":"153","line":6,"column":7,"nodeType":"122","messageId":"123","endLine":6,"endColumn":20},{"ruleId":"135","severity":1,"message":"136","line":10,"column":5,"nodeType":"137","messageId":"138","endLine":12,"endColumn":6},{"ruleId":"120","severity":1,"message":"147","line":4,"column":28,"nodeType":"122","messageId":"123","endLine":4,"endColumn":35},{"ruleId":"120","severity":1,"message":"152","line":5,"column":8,"nodeType":"122","messageId":"123","endLine":5,"endColumn":14},{"ruleId":"120","severity":1,"message":"139","line":1,"column":10,"nodeType":"122","messageId":"123","endLine":1,"endColumn":14},{"ruleId":"120","severity":1,"message":"140","line":1,"column":16,"nodeType":"122","messageId":"123","endLine":1,"endColumn":21},{"ruleId":"120","severity":1,"message":"129","line":1,"column":23,"nodeType":"122","messageId":"123","endLine":1,"endColumn":31},{"ruleId":"120","severity":1,"message":"146","line":1,"column":33,"nodeType":"122","messageId":"123","endLine":1,"endColumn":39},{"ruleId":"120","severity":1,"message":"130","line":1,"column":41,"nodeType":"122","messageId":"123","endLine":1,"endColumn":46},{"ruleId":"120","severity":1,"message":"154","line":1,"column":48,"nodeType":"122","messageId":"123","endLine":1,"endColumn":55},{"ruleId":"120","severity":1,"message":"155","line":1,"column":57,"nodeType":"122","messageId":"123","endLine":1,"endColumn":61},{"ruleId":"120","severity":1,"message":"156","line":1,"column":63,"nodeType":"122","messageId":"123","endLine":1,"endColumn":67},{"ruleId":"120","severity":1,"message":"139","line":1,"column":10,"nodeType":"122","messageId":"123","endLine":1,"endColumn":14},{"ruleId":"120","severity":1,"message":"140","line":1,"column":16,"nodeType":"122","messageId":"123","endLine":1,"endColumn":21},{"ruleId":"120","severity":1,"message":"129","line":1,"column":23,"nodeType":"122","messageId":"123","endLine":1,"endColumn":31},{"ruleId":"120","severity":1,"message":"146","line":1,"column":33,"nodeType":"122","messageId":"123","endLine":1,"endColumn":39},{"ruleId":"120","severity":1,"message":"130","line":1,"column":41,"nodeType":"122","messageId":"123","endLine":1,"endColumn":46},{"ruleId":"120","severity":1,"message":"154","line":1,"column":48,"nodeType":"122","messageId":"123","endLine":1,"endColumn":55},{"ruleId":"120","severity":1,"message":"156","line":1,"column":63,"nodeType":"122","messageId":"123","endLine":1,"endColumn":67},{"ruleId":"120","severity":1,"message":"131","line":2,"column":28,"nodeType":"122","messageId":"123","endLine":2,"endColumn":36},{"ruleId":"120","severity":1,"message":"142","line":2,"column":38,"nodeType":"122","messageId":"123","endLine":2,"endColumn":47},"no-unused-vars","'history' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","no-native-reassign",["157"],"no-negated-in-lhs",["158"],"'Checkbox' is defined but never used.","'Modal' is defined but never used.","'useState' is defined but never used.","'getCurrentUser' is defined but never used.",["157"],["158"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Form' is defined but never used.","'Input' is defined but never used.","'Descriptions' is defined but never used.","'useEffect' is defined but never used.","'Dropdown' is defined but never used.","'Link' is defined but never used.","'SubMenu' is assigned a value but never used.","'Button' is defined but never used.","'Divider' is defined but never used.","'DatePicker' is defined but never used.","'InputNumber' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'moment' is defined but never used.","'CheckboxGroup' is assigned a value but never used.","'message' is defined but never used.","'List' is defined but never used.","'Card' is defined but never used.","no-global-assign","no-unsafe-negation"]