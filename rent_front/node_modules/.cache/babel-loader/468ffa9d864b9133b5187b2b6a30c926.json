{"ast":null,"code":"var _jsxFileName = \"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Favorite.js\";\nimport { Form, Input, Checkbox, Button, Modal, message, List, Card, Descriptions } from 'antd';\nimport React, { Component, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Favorite extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getFavorite = () => {\n      const request = {\n        user: this.state.user\n      };\n      axios.post('/pillow/favorite/query_all_favorite/', request).then(res => {\n        var _res$data, _res$data$response;\n\n        console.log(res);\n\n        if (res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$response = _res$data.response) === null || _res$data$response === void 0 ? void 0 : _res$data$response.results) {\n          var _res$data2, _res$data2$response;\n\n          this.setState({\n            favoriteList: res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : (_res$data2$response = _res$data2.response) === null || _res$data2$response === void 0 ? void 0 : _res$data2$response.results\n          });\n        }\n      }).catch(e => console.log(e));\n    };\n\n    this.deleteFav = room_id => {\n      const deleteInfo = {\n        user: this.state.user,\n        room: room_id\n      };\n      axios.post('/pillow/favorite/deleteFavorite/', deleteInfo).then(res => {\n        console.log(\"res\", res);\n\n        if (res.data.response.error === 'OK') {\n          message.info(\"You've deleted successfully!\");\n          this.getFavorite();\n        } else {\n          message.error(\"This is an error message\");\n        }\n      });\n    };\n\n    this.favoriteList = () => /*#__PURE__*/_jsxDEV(List, {\n      grid: {\n        gutter: 16,\n        column: 4\n      },\n      dataSource: this.state.favoriteList,\n      renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          title: \"Room ID\",\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            this.deleteFav(item);\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this);\n\n    this.state = {\n      user: 3,\n      favoriteList: null,\n      deleteInfo: {\n        user: '',\n        room: ''\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      user: window.localStorage.getItem(\"user\")\n    }, () => {\n      console.log(\"state\", this.state.user);\n    });\n    this.getFavorite();\n  } // onFinish = (values) => {\n  //     console.log(\"values\", values);\n  //     const deleteInfo = { user: values.user, room: values.room };\n  //     axios.post('/pillow/favorite/deleteFavorite/', deleteInfo).then((res) => {\n  //         console.log(\"res\", res);\n  //         if (res.data.response.error === 'OK') {\n  //             message.info(\"You've deleted successfully!\");\n  //         } else {\n  //             message.error(\"This is an error message\");\n  //         }\n  //     });\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.favoriteList && this.favoriteList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default Favorite;","map":{"version":3,"sources":["/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Favorite.js"],"names":["Form","Input","Checkbox","Button","Modal","message","List","Card","Descriptions","React","Component","useState","useEffect","axios","Favorite","constructor","props","getFavorite","request","user","state","post","then","res","console","log","data","response","results","setState","favoriteList","catch","e","deleteFav","room_id","deleteInfo","room","error","info","gutter","column","item","componentDidMount","window","localStorage","getItem","render"],"mappings":";AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,QAAtB,EAAgCC,MAAhC,EAAwCC,KAAxC,EAA+CC,OAA/C,EAAwDC,IAAxD,EAA8DC,IAA9D,EAAoEC,YAApE,QAAwF,MAAxF;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC7BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAgCnBC,WAhCmB,GAgCL,MAAM;AAChB,YAAMC,OAAO,GAAG;AAACC,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD;AAAlB,OAAhB;AACAN,MAAAA,KAAK,CAACQ,IAAN,CAAW,sCAAX,EAAmDH,OAAnD,EAA4DI,IAA5D,CAAiEC,GAAG,IAAI;AAAA;;AACpEC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,YAAIA,GAAJ,aAAIA,GAAJ,oCAAIA,GAAG,CAAEG,IAAT,oEAAI,UAAWC,QAAf,uDAAI,mBAAqBC,OAAzB,EAAkC;AAAA;;AAC9B,eAAKC,QAAL,CAAc;AAACC,YAAAA,YAAY,EAAEP,GAAF,aAAEA,GAAF,qCAAEA,GAAG,CAAEG,IAAP,sEAAE,WAAWC,QAAb,wDAAE,oBAAqBC;AAApC,WAAd;AACH;AACJ,OALD,EAKGG,KALH,CAKSC,CAAC,IAAIR,OAAO,CAACC,GAAR,CAAYO,CAAZ,CALd;AAMH,KAxCkB;;AAAA,SA0CnBC,SA1CmB,GA0CNC,OAAD,IAAa;AACrB,YAAMC,UAAU,GAAG;AAAEhB,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD,IAAnB;AAAyBiB,QAAAA,IAAI,EAAEF;AAA/B,OAAnB;AACArB,MAAAA,KAAK,CAACQ,IAAN,CAAW,kCAAX,EAA+Cc,UAA/C,EAA2Db,IAA3D,CAAiEC,GAAD,IAAS;AACrEC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,GAAnB;;AACA,YAAIA,GAAG,CAACG,IAAJ,CAASC,QAAT,CAAkBU,KAAlB,KAA4B,IAAhC,EAAsC;AAClChC,UAAAA,OAAO,CAACiC,IAAR,CAAa,8BAAb;AACA,eAAKrB,WAAL;AACH,SAHD,MAGO;AACHZ,UAAAA,OAAO,CAACgC,KAAR,CAAc,0BAAd;AACH;AACJ,OARD;AASH,KArDkB;;AAAA,SAuDnBP,YAvDmB,GAuDJ,mBACX,QAAC,IAAD;AACI,MAAA,IAAI,EAAE;AAAES,QAAAA,MAAM,EAAE,EAAV;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OADV;AAEI,MAAA,UAAU,EAAE,KAAKpB,KAAL,CAAWU,YAF3B;AAGI,MAAA,UAAU,EAAEW,IAAI,iBAChB,QAAC,IAAD,CAAM,IAAN;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,SAAZ;AAAA,oBAAuBA;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAM;AACnB,iBAAKR,SAAL,CAAeQ,IAAf;AACH,WAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAxDe;;AAEf,SAAKrB,KAAL,GAAa;AACTD,MAAAA,IAAI,EAAE,CADG;AAETW,MAAAA,YAAY,EAAE,IAFL;AAGTK,MAAAA,UAAU,EAAE;AACRhB,QAAAA,IAAI,EAAE,EADE;AAERiB,QAAAA,IAAI,EAAE;AAFE;AAHH,KAAb;AAQH;;AAEDM,EAAAA,iBAAiB,GAAG;AAChB,SAAKb,QAAL,CAAc;AAAEV,MAAAA,IAAI,EAAEwB,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B;AAAR,KAAd,EAA8D,MAAM;AAChErB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKL,KAAL,CAAWD,IAAhC;AACH,KAFD;AAGA,SAAKF,WAAL;AACH,GAlB4B,CAoB7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAwCA6B,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA,gBA4CE,KAAK1B,KAAL,CAAWU,YAAX,IAA2B,KAAKA,YAAL;AA5C7B;AAAA;AAAA;AAAA;AAAA,YAAP;AA8CH;;AAtH4B;;AAyHjC,eAAehB,QAAf","sourcesContent":["import { Form, Input, Checkbox, Button, Modal, message, List, Card, Descriptions } from 'antd';\nimport React, { Component, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\nclass Favorite extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: 3,\n            favoriteList: null,\n            deleteInfo: {\n                user: '',\n                room: ''\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ user: window.localStorage.getItem(\"user\")  }, () => {\n            console.log(\"state\", this.state.user);\n        });\n        this.getFavorite();\n    }\n\n    // onFinish = (values) => {\n    //     console.log(\"values\", values);\n    //     const deleteInfo = { user: values.user, room: values.room };\n    //     axios.post('/pillow/favorite/deleteFavorite/', deleteInfo).then((res) => {\n    //         console.log(\"res\", res);\n    //         if (res.data.response.error === 'OK') {\n    //             message.info(\"You've deleted successfully!\");\n    //         } else {\n    //             message.error(\"This is an error message\");\n    //         }\n    //     });\n    // }\n\n    getFavorite = () => {\n        const request = {user: this.state.user};\n        axios.post('/pillow/favorite/query_all_favorite/', request).then(res => {\n            console.log(res);\n            if (res?.data?.response?.results) {\n                this.setState({favoriteList: res?.data?.response?.results})\n            }\n        }).catch(e => console.log(e));\n    };\n\n    deleteFav = (room_id) => {\n        const deleteInfo = { user: this.state.user, room: room_id };\n        axios.post('/pillow/favorite/deleteFavorite/', deleteInfo).then((res) => {\n            console.log(\"res\", res);\n            if (res.data.response.error === 'OK') {\n                message.info(\"You've deleted successfully!\");\n                this.getFavorite();\n            } else {\n                message.error(\"This is an error message\");\n            }\n        });\n    }\n\n    favoriteList = () => (\n        <List \n            grid={{ gutter: 16, column: 4 }}\n            dataSource={this.state.favoriteList}\n            renderItem={item => (\n            <List.Item>\n                <Card title=\"Room ID\">{item}</Card>\n                <Button onClick={() => {\n                    this.deleteFav(item)\n                }}>Delete</Button>\n            </List.Item>\n            )}  \n        />\n    );\n\n    render() {\n        return <div>\n                {/* <Form\n                    name=\"basic\"\n                    labelCol={{ span: 8 }}\n                    wrapperCol={{ span: 16 }}\n                    initialValues={{ remember: true }}\n                    onFinish={this.onFinish}\n                    autoComplete=\"off\"\n                >\n                    <Form.Item\n                        label=\"User_id\"\n                        name=\"user\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input the user id for the record',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Room_id\"\n                        name=\"room\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input the room id for the record!',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        wrapperCol={{\n                            offset: 8,\n                            span: 16,\n                        }}\n                    >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Delete\n                        </Button>\n                    </Form.Item>\n                </Form> */}\n                {this.state.favoriteList && this.favoriteList()} \n        </div>;\n    }\n}\n\nexport default Favorite;"]},"metadata":{},"sourceType":"module"}