{"ast":null,"code":"var _jsxFileName = \"/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Favorite.js\";\nimport { Form, Input, Checkbox, Button, Modal, message, List, Card, Descriptions } from 'antd';\nimport React, { Component, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Favorite extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onFinish = values => {\n      console.log(\"values\", values);\n      const deleteInfo = {\n        user: values.user,\n        room: values.room\n      };\n      axios.post('/pillow/favorite/deleteFavorite/', deleteInfo).then(res => {\n        console.log(\"res\", res);\n\n        if (res.data.response.error === 'OK') {\n          message.info(\"You've deleted successfully!\");\n        } else {\n          message.error(\"This is an error message\");\n        }\n      });\n    };\n\n    this.deleteFav = room_id => {\n      const deleteInfo = {\n        user: 1,\n        room: room_id\n      };\n      axios.post('/pillow/favorite/deleteFavorite/', deleteInfo).then(res => {\n        console.log(\"res\", res);\n\n        if (res.data.response.error === 'OK') {\n          message.info(\"You've deleted successfully!\");\n        } else {\n          message.error(\"This is an error message\");\n        }\n      });\n    };\n\n    this.getFavorite = () => {\n      axios.get('/pillow/favorite/').then(res => {});\n    };\n\n    this.favoriteList = () => /*#__PURE__*/_jsxDEV(List, {\n      grid: {\n        gutter: 16,\n        column: 4\n      },\n      dataSource: this.state.favoriteList,\n      renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          title: \"Room ID\",\n          children: item.room\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {},\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this);\n\n    this.state = {\n      favoriteList: null,\n      deleteInfo: {\n        user: '',\n        room: ''\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        name: \"basic\",\n        labelCol: {\n          span: 8\n        },\n        wrapperCol: {\n          span: 16\n        },\n        initialValues: {\n          remember: true\n        },\n        onFinish: this.onFinish,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"User_id\",\n          name: \"user\",\n          rules: [{\n            required: true,\n            message: 'Please input the user id for the record'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Room_id\",\n          name: \"room\",\n          rules: [{\n            required: true,\n            message: 'Please input the room id for the record!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: {\n            offset: 8,\n            span: 16\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), this.state.favoriteList && this.favoriteList()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default Favorite;","map":{"version":3,"sources":["/Users/shuzhan/Documents/GitHub/renting_system/rent_front/src/Favorite.js"],"names":["Form","Input","Checkbox","Button","Modal","message","List","Card","Descriptions","React","Component","useState","useEffect","axios","Favorite","constructor","props","onFinish","values","console","log","deleteInfo","user","room","post","then","res","data","response","error","info","deleteFav","room_id","getFavorite","get","favoriteList","gutter","column","state","item","render","span","remember","required","offset"],"mappings":"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","sourcesContent":["import { Form, Input, Checkbox, Button, Modal, message, List, Card, Descriptions } from 'antd';\nimport React, { Component, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\nclass Favorite extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            favoriteList: null,\n            deleteInfo: {\n                user: '',\n                room: ''\n            }\n        }\n    }\n\n    onFinish = (values) => {\n        console.log(\"values\", values);\n        const deleteInfo = { user: values.user, room: values.room };\n        axios.post('/pillow/favorite/deleteFavorite/', deleteInfo).then((res) => {\n            console.log(\"res\", res);\n            if (res.data.response.error === 'OK') {\n                message.info(\"You've deleted successfully!\");\n            } else {\n                message.error(\"This is an error message\");\n            }\n        });\n    }\n\n    deleteFav = (room_id) => {\n        const deleteInfo = { user: 1, room: room_id };\n        axios.post('/pillow/favorite/deleteFavorite/', deleteInfo).then((res) => {\n            console.log(\"res\", res);\n            if (res.data.response.error === 'OK') {\n                message.info(\"You've deleted successfully!\");\n            } else {\n                message.error(\"This is an error message\");\n            }\n        });\n    }\n\n    getFavorite = () => {\n        axios.get('/pillow/favorite/').then(res => {\n\n        })\n    };\n\n    favoriteList = () => (\n        <List \n            grid={{ gutter: 16, column: 4 }}\n            dataSource={this.state.favoriteList}\n            renderItem={item => (\n            <List.Item>\n                <Card title=\"Room ID\">{item.room}</Card>\n                <Button onClick={() => {\n\n                }}>Delete</Button>\n            </List.Item>\n            )}  \n        />\n    );\n\n    render() {\n        return <div>\n                <Form\n                    name=\"basic\"\n                    labelCol={{ span: 8 }}\n                    wrapperCol={{ span: 16 }}\n                    initialValues={{ remember: true }}\n                    onFinish={this.onFinish}\n                    autoComplete=\"off\"\n                >\n                    <Form.Item\n                        label=\"User_id\"\n                        name=\"user\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input the user id for the record',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Room_id\"\n                        name=\"room\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input the room id for the record!',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        wrapperCol={{\n                            offset: 8,\n                            span: 16,\n                        }}\n                    >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Delete\n                        </Button>\n                    </Form.Item>\n                </Form>\n                {this.state.favoriteList && this.favoriteList()} \n        </div>;\n    }\n}\n\nexport default Favorite;"]},"metadata":{},"sourceType":"module"}